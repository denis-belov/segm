{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/helpers/typeof.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/regenerator/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/cxx-specific.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/imports.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/memory.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/wasm-wrapper.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread2/thread2.1.worker.js"],"names":["_typeof","require","_regeneratorRuntime","module","exports","__esModule","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","bool","addr","arguments","mem","typed_array_constructor","memory","buffer","char","int","short","long","size_t","uint8_t","Uint8Array","int8_t","Int8Array","uint16_t","Uint16Array","int16_t","Int16Array","uint32_t","Uint32Array","int32_t","Int32Array","uint64_t","BigUint64Array","int64_t","BigInt64Array","float","double","long_double","size","addr2","globals","getCStringLength","_addr","vend","memory_views","UI8","c_string","c_string2","convertUint8ArrayToDomString","std_string","__getStdStringData","__getStdStringSize","std_string2","std_vector","__getStdVectorData","__getStdVectorSize","std_vector_char","std_vector_int","std_vector_short","std_vector_long","std_vector_size_t","std_vector_addr","std_vector_uint8_t","std_vector_int8_t","std_vector_uint16_t","std_vector_int16_t","std_vector_uint32_t","std_vector_int32_t","std_vector_uint64_t","std_vector_int64_t","std_vector_float","std_vector_double","std_vector_long_double","resizeStdVector","__resizeStdVector","updateStdVectorData","_data","set","demangleCxxNames","_this","demangled_name_max_length","demangled_name_addr","__malloc","exports_demangled_reduced","exports_demangled","reduce","_name","startsWith","concat","convertDomStringToUint8Array","demangled_name","__demangleCxxName","replace","Array","isArray","first_entry","__free","Class","wasm_wrapper","_Class","_createClass","input","_classCallCheck","_wasm_wrapper$addr","_wasm_wrapper$addr2","_slicedToArray","_defineProperty","filter","member_name","includes","member_name_trimmed","wasm_object","_member_name$match","parameters","match","split","overloaded","_len","args","_key","apply","New","NewWrapper","IDLE_FUNCTION","imports_lib","console_log","types_addr","values_addr","_console","arg_types","_wasm_wrapper$size_t","__any_value_size","_wasm_wrapper$size_t2","any_value_size","type_name","type_names","value_addr","interp_log","console","log","console_log2","_console2","date_now","Date","now","host_loop","function_addr","_function","_len2","_key2","setInterval","host_animation_loop","loop","requestAnimationFrame","_toConsumableArray","rdty_sleep","duration","DATA_ADDR","sleeping","asyncify_stop_rewind","I32","asyncify_start_unwind","setTimeout","asyncify_start_rewind","window","Worker","SharedArrayBuffer","assign","runThread","thread_addr","thread_types_addr","thread_values_addr","threads","thread","Thread2","joinThread","async_count","async_promise","async_promise_setter","promise","async_func","async_args","terminateThread","terminate","Atomics","atomic_lock","atomic_unlock","UNLOCKED","LOCKED","atomic_addr","__atomic_malloc_index","wait","Infinity","compareExchange","store","notify","that","options","thread_stack_size","typed_array_name","_self$typed_array_nam","_inherits","_class","_super","_createSuper","_this2","ArrayBuffer","__allocated","_possibleConstructorReturn","byteOffset","BYTES_PER_ELEMENT","_class2","byteLength","get","__getData","function_name","_self$typed_array_nam2","kind","type_name_index","__sizeof","typed_array_constructor_name","typed_array_constructor_wasm","typed_array_constructor_wasm2","interp_thread","Boolean","interp_arg","str","I8","UI16","I16","UI32","UI64","I64","F32","Float32Array","F64","Float64Array","e","t","r","n","o","a","c","u","h","l","f","s","y","p","d","v","g","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","protoProps","staticProps","_toPrimitive","String","hint","prim","toPrimitive","res","Number","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","from","test","len","arr2","__CODE_TYPE_BYTECODE__","__CODE_TYPE_FUNCTION__","ERROR_LOG","WARN_LOG","DEBUG_INFO","DEBUG_INFO_PUSH","_len3","_key3","DEBUG_INFO_LOG","thread_id","label","_console3","navigator","hardwareConcurrency","WasmWrapper","__wasm_wrapper__","ThreadPromiseBunch","running_count","run","callback1","callback2","callback_next1","callback_next2","__initHeapPointer","all","resolves","__resetHeapPointer","runLog","LOG","__heap_pointer","_runAsync","_callee","_this3","_args","_callee$","_context","t0","t1","runAsync","_x","run2","_runAsync2","_callee2","_args2","_callee2$","_context2","runAsync2","_x2","__indirect_function_table","_async","_callee3","_len4","_key4","_args3","_callee3$","_context3","asyncify_stop_unwind","_x3","_instantiate","_callee4","_ref","_this4","wasm_module_imports","imports_custom","wasm_module","code","debug","imports_aggregate","wasm_module_instance","_callee4$","_context4","imports_thread","env","import_custom","wasm_module_import","WebAssembly","instantiate","_x4","_init","_callee5","_ref2","_ref2$memory","_ref2$memory_params","memory_params","_ref2$imports","_ref2$stack_pointer","stack_pointer","_ref2$configureMemory","configureMemory","_ref2$forceLocalMemor","forceLocalMemory","_ref2$initGlobals","initGlobals","_ref2$demangleCxxName","_ref2$debug","code_type","code_temp","_wasm_module_imports$","_wasm_module_imports$2","imported_memory","shared_memory_allowed","memory_desc","_wasm_module_imports","_this$demangleCxxName","_callee5$","_context5","minimum","initial","maximum","shared","imports","atob","charCodeAt","getImports","compile","Module","import_desc","Memory","Math","imul","__main","__thread_id","init","_x5","_this5","prefix_length","export_name","getNewThread","Thread","getNewThread2","getNewThread3","Thread3","getNewThread4","Thread4","_initThreads","_callee6","thread_count","_this6","_callee6$","_context6","fill","map","initThreads","_x6","terminateThreads","uint8array","text_decoder","decode","text","text_encoder","encode","_testSimd","_callee7","wasm_buffer","_callee7$","_context7","testSimd","_testAtomics","_callee8","_callee8$","_context8","testAtomics","TextDecoder","TextEncoder","cxx_specific_functions","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","wasm","onmessage","data","_data$data","postMessage"],"mappings":"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","file":"thread2.1.worker.worker.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"thread2.1.worker\": 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\": function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t\t\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\": function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(__webpack_require__.p + \"\" + ({}[chunkId]||chunkId) + \".worker.worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"0\":[\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\"],\"1\":[\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\"]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"../../renderity/wasm-wrapper/src/test-atomic/build/test.wasm\":\"c8e8b144c658ecc0cc8b\",\"../../renderity/wasm-wrapper/src/test-simd/build/test.wasm\":\"15c3acd181c9cc8c1774\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./node_modules/babel-loader/lib/index.js?!./node_modules/conditional-compile-loader/index.js?!../../renderity/wasm-wrapper/src/threads/thread2/thread2.1.worker.js\");\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// TODO: new for C++ types (e.g. _new('uint32_t', 16)).\n\nexport default\n{\n\t// https://en.cppreference.com/w/cpp/language/types\n\tbool (addr, length = 1) { return new this.mem.bool.typed_array_constructor(this.memory.buffer, addr, length); },\n\tchar (addr, length = 1) { return new this.mem.char.typed_array_constructor(this.memory.buffer, addr, length); },\n\tint (addr, length = 1) { return new this.mem.int.typed_array_constructor(this.memory.buffer, addr, length); },\n\tshort (addr, length = 1) { return new this.mem.short.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong (addr, length = 1) { return new this.mem.long.typed_array_constructor(this.memory.buffer, addr, length); },\n\tsize_t (addr, length = 1) { return new this.mem.size_t.typed_array_constructor(this.memory.buffer, addr, length); },\n\taddr (addr, length = 1) { return new this.mem.addr.typed_array_constructor(this.memory.buffer, addr, length); },\n\tuint8_t (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length); },\n\tint8_t (addr, length = 1) { return new self.Int8Array(this.memory.buffer, addr, length); },\n\tuint16_t (addr, length = 1) { return new self.Uint16Array(this.memory.buffer, addr, length); },\n\tint16_t (addr, length = 1) { return new self.Int16Array(this.memory.buffer, addr, length); },\n\tuint32_t (addr, length = 1) { return new self.Uint32Array(this.memory.buffer, addr, length); },\n\tint32_t (addr, length = 1) { return new self.Int32Array(this.memory.buffer, addr, length); },\n\tuint64_t (addr, length = 1) { return new self.BigUint64Array(this.memory.buffer, addr, length); },\n\tint64_t (addr, length = 1) { return new self.BigInt64Array(this.memory.buffer, addr, length); },\n\tfloat (addr, length = 1) { return new this.mem.float.typed_array_constructor(this.memory.buffer, addr, length); },\n\tdouble (addr, length = 1) { return new this.mem.double.typed_array_constructor(this.memory.buffer, addr, length); },\n\tlong_double (addr, length = 1) { return new self.Uint8Array(this.memory.buffer, addr, length * this.mem.long_double.size); },\n\n\taddr2 (name, length = 1) { return this.addr(this.globals[name] || this.exports[name].value, length); },\n\n\tgetCStringLength (addr)\n\t{\n\t\tconst _addr = addr;\n\n\t\t// Find terminating \"\\0\".\n\t\tfor (let vend = 0; ; ++vend)\n\t\t{\n\t\t\t// if (this.char(_addr + vend)[0] === 0)\n\t\t\tif (this.memory_views.UI8[_addr + vend] === 0)\n\t\t\t{\n\t\t\t\treturn vend;\n\t\t\t}\n\t\t}\n\n\t\t// return this.exports.__strlen(addr);\n\t},\n\n\tc_string (addr)\n\t{\n\t\treturn this.char(addr, this.getCStringLength(addr));\n\t\t// return this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr));\n\t},\n\n\tc_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.c_string(addr));\n\t\t// return this.constructor.convertUint8ArrayToDomString(this.memory_views.UI8.subarray(addr, addr + this.getCStringLength(addr)));\n\t},\n\n\tstd_string (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.char\n\t\t\t(\n\t\t\t\tthis.exports.__getStdStringData(addr),\n\n\t\t\t\tthis.exports.__getStdStringSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\tstd_string2 (addr)\n\t{\n\t\treturn this.constructor.convertUint8ArrayToDomString(this.std_string(addr));\n\t},\n\n\tstd_vector (addr, type)\n\t{\n\t\tconst result =\n\t\t\tthis[type]\n\t\t\t(\n\t\t\t\tthis.exports.__getStdVectorData(addr),\n\n\t\t\t\tthis.exports.__getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t},\n\n\t// std_vector_bool (addr) { return this.std_vector(addr, 'bool'); },\n\tstd_vector_char (addr) { return this.std_vector(addr, 'char'); },\n\tstd_vector_int (addr) { return this.std_vector(addr, 'int'); },\n\tstd_vector_short (addr) { return this.std_vector(addr, 'short'); },\n\tstd_vector_long (addr) { return this.std_vector(addr, 'long'); },\n\tstd_vector_size_t (addr) { return this.std_vector(addr, 'size_t'); },\n\tstd_vector_addr (addr) { return this.std_vector(addr, 'addr'); },\n\tstd_vector_uint8_t (addr) { return this.std_vector(addr, 'uint8_t'); },\n\tstd_vector_int8_t (addr) { return this.std_vector(addr, 'int8_t'); },\n\tstd_vector_uint16_t (addr) { return this.std_vector(addr, 'uint16_t'); },\n\tstd_vector_int16_t (addr) { return this.std_vector(addr, 'int16_t'); },\n\tstd_vector_uint32_t (addr) { return this.std_vector(addr, 'uint32_t'); },\n\tstd_vector_int32_t (addr) { return this.std_vector(addr, 'int32_t'); },\n\tstd_vector_uint64_t (addr) { return this.std_vector(addr, 'uint64_t'); },\n\tstd_vector_int64_t (addr) { return this.std_vector(addr, 'int64_t'); },\n\tstd_vector_float (addr) { return this.std_vector(addr, 'float'); },\n\tstd_vector_double (addr) { return this.std_vector(addr, 'double'); },\n\tstd_vector_long_double (addr) { return this.std_vector(addr, 'long_double'); },\n\n\tresizeStdVector (addr, size)\n\t{\n\t\tthis.exports.__resizeStdVector(addr, size);\n\t},\n\n\tupdateStdVectorData (addr, type, _data)\n\t{\n\t\tthis.std_vector(addr, type).set(_data);\n\t},\n\n\n\n\tdemangleCxxNames ()\n\t{\n\t\tconst demangled_name_max_length = 1024;\n\t\tconst demangled_name_addr = this.exports.__malloc(demangled_name_max_length);\n\n\t\tconst exports_demangled_reduced = {};\n\n\t\tconst exports_demangled =\n\t\t\tObject.keys(this.exports)\n\t\t\t\t.reduce\n\t\t\t\t(\n\t\t\t\t\t(exports_demangled, _name) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (_name.startsWith('_Z'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst name = `${ _name }\\0`;\n\n\t\t\t\t\t\t\tthis.memory_views.UI8.set(this.constructor.convertDomStringToUint8Array(name), demangled_name_addr);\n\n\t\t\t\t\t\t\tconst demangled_name =\n\t\t\t\t\t\t\t\tthis.constructor.convertUint8ArrayToDomString\n\t\t\t\t\t\t\t\t(this.c_string(this.exports.__demangleCxxName(demangled_name_addr)))\n\t\t\t\t\t\t\t\t\t.replace(/, /g, ',');\n\n\t\t\t\t\t\t\tif (exports_demangled[demangled_name])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (Array.isArray(exports_demangled[demangled_name]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\texports_demangled[demangled_name].push(this.exports[_name]);\n\n\t\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst first_entry = exports_demangled[demangled_name];\n\n\t\t\t\t\t\t\t\texports_demangled[demangled_name] = [ first_entry, this.exports[_name] ];\n\n\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\texports_demangled[demangled_name] = this.exports[_name];\n\n\t\t\t\t\t\t\texports_demangled_reduced[demangled_name.replace(/\\([^)]*\\)/g, '')] = this.exports[_name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t},\n\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\tthis.exports.__free(demangled_name_addr);\n\n\t\treturn { exports_demangled, exports_demangled_reduced };\n\t},\n\n\n\n\t// TODO: rename to \"getClass\".\n\tClass (name)\n\t{\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass _Class\n\t\t{\n\t\t\tstatic name = name;\n\n\t\t\tstatic overloaded = {};\n\n\n\n\t\t\tconstructor (input)\n\t\t\t{\n\t\t\t\tif (typeof input === 'number')\n\t\t\t\t{\n\t\t\t\t\tthis.addr = input;\n\t\t\t\t}\n\t\t\t\telse if (typeof input === 'string')\n\t\t\t\t{\n\t\t\t\t\t[ this.addr ] = wasm_wrapper.addr2(input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.Object.keys(this.exports_demangled)\n\t\t\t.filter\n\t\t\t(\n\t\t\t\tmember_name => member_name.includes(name),\n\t\t\t)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmember_name =>\n\t\t\t\t{\n\t\t\t\t\tlet member_name_trimmed = member_name.replace(`${ name }::`, '').replace(/\\((.*)+/g, '');\n\n\t\t\t\t\t// Some objects may be exported twice from wasm. TODO: why does it occur?\n\t\t\t\t\tconst wasm_object =\n\t\t\t\t\t\twasm_wrapper.exports_demangled[member_name][0] || wasm_wrapper.exports_demangled[member_name];\n\n\t\t\t\t\tif (typeof wasm_object === 'function')\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parameters =\n\t\t\t\t\t\t\tmember_name.match(/\\((.*)+/g)?.[0].replace(/\\(|( )|\\)/g, '').split(',');\n\n\t\t\t\t\t\tif (parameters.length && parameters[0] === '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparameters.length = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// static function\n\t\t\t\t\t\tif (parameters.length === wasm_object.length)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// non-static function\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class.prototype[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Non-wrapped\n\t\t\t\t\t\t\t_Class[`proto_${ member_name_trimmed }`] = wasm_object;\n\n\t\t\t\t\t\t\t_Class.prototype[member_name_trimmed] =\n\t\t\t\t\t\t\t\tfunction (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn wasm_object(this.addr, ...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof wasm_object === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t// Presume New() returns a pointer\n\t\tif (_Class.New)\n\t\t{\n\t\t\t_Class.NewWrapper = () => new _Class(_Class.New());\n\t\t}\n\n\n\n\t\treturn _Class;\n\t},\n};\n","const IDLE_FUNCTION = () => 0;\n\n\n\nexport default function (wasm_wrapper)\n{\n\tconst imports_lib =\n\t{\n\t\tconsole_log: (size, types_addr, values_addr) =>\n\t\t{\n\t\t\tconst arg_types = wasm_wrapper.size_t(types_addr, size);\n\n\t\t\tconst args = new Array(size);\n\n\t\t\tconst [ any_value_size ] = wasm_wrapper.size_t(wasm_wrapper.globals.__any_value_size);\n\n\t\t\tfor (let i = 0; i < size; ++i)\n\t\t\t{\n\t\t\t\tconst type_name = wasm_wrapper.type_names[arg_types[i]];\n\n\t\t\t\tconst value_addr = values_addr + (any_value_size * i);\n\n\t\t\t\targs[i] = wasm_wrapper.mem[type_name].interp_log(value_addr);\n\t\t\t}\n\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tconsole_log2: (...args) =>\n\t\t{\n\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t},\n\n\t\tdate_now: () => Date.now(),\n\n\t\thost_loop: (function_addr, ...args) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\t// setInterval(_function, 1000, ...args);\n\t\t\tsetInterval(_function, 0, ...args);\n\t\t},\n\n\t\thost_animation_loop: (function_addr) =>\n\t\t{\n\t\t\tconst _function = wasm_wrapper.function(function_addr);\n\n\t\t\tconst loop = () =>\n\t\t\t{\n\t\t\t\trequestAnimationFrame(_function);\n\n\t\t\t\t_function(...args);\n\t\t\t};\n\n\t\t\tloop();\n\t\t},\n\n\t\t// For using this function WASM code must be processed by\n\t\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t\trdty_sleep: (duration) =>\n\t\t{\n\t\t\t// Global state for running the program.\n\n\t\t\tconst DATA_ADDR = 16;\n\n\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t{\n\t\t\t\t// We are called as part of a resume/rewind. Stop sleeping.\n\t\t\t\t// console.log('...resume');\n\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// We are called in order to start a sleep/unwind.\n\t\t\t\t// console.log('sleep...');\n\t\t\t\t// Fill in the data structure. The first value has the stack location,\n\t\t\t\t// which for simplicity we can start right after the data structure itself.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t// The end of the stack will not be reached here anyhow.\n\n\t\t\t\t// TODO: use stack_size instead of 1024 * 1024.\n\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t// // Resume after the proper delay.\n\t\t\t\t// setTimeout\n\t\t\t\t// (\n\t\t\t\t// \t() =>\n\t\t\t\t// \t{\n\t\t\t\t// \t\t// console.log('timeout ended, starting to rewind the stack');\n\t\t\t\t// \t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\t\t\t\t// \t\t// The code is now ready to rewind; to start the process, enter the\n\t\t\t\t// \t\t// first function that should be on the call stack.\n\t\t\t\t// \t},\n\n\t\t\t\t// \tduration,\n\t\t\t\t// );\n\n\t\t\t\tsetTimeout(wasm_wrapper.exports.asyncify_start_rewind, duration, DATA_ADDR);\n\t\t\t}\n\t\t},\n\t};\n\n\t// For using these functions WASM code must be processed by\n\t// wasm-opt tool with flags: \"-O1\", \"--asyncify\".\n\t// If this is main worker.\n\tif\n\t(\n\t\tself.window &&\n\t\tself.Worker &&\n\t\tself.SharedArrayBuffer\n\t)\n\t{\n\t\tObject.assign\n\t\t(\n\t\t\timports_lib,\n\n\t\t\t{\n\t\t\t\trunThread: (thread_addr, function_addr, thread_types_addr, thread_values_addr) =>\n\t\t\t\t{\n\t\t\t\t\tif (!wasm_wrapper.threads)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.threads = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst thread =\n\t\t\t\t\t\tnew wasm_wrapper.constructor.Thread2\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\twasm_wrapper,\n\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tfunction_addr,\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_types_addr),\n\t\t\t\t\t\t\t\twasm_wrapper.exports.__getStdVectorData(thread_values_addr)\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t);\n\n\t\t\t\t\twasm_wrapper.threads[thread_addr] = thread;\n\t\t\t\t},\n\n\t\t\t\tjoinThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.async_count = wasm_wrapper.async_count || 0;\n\n\t\t\t\t\t++wasm_wrapper.async_count;\n\n\t\t\t\t\tif (wasm_wrapper.async_count === 1)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.async_promise =\n\t\t\t\t\t\t\tnew Promise\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresolve =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter = (val) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tif (val)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst DATA_ADDR = 16;\n\n\t\t\t\t\tif (wasm_wrapper.sleeping)\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_stop_rewind();\n\n\t\t\t\t\t\twasm_wrapper.sleeping = false;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t\t\twasm_wrapper.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\n\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_unwind(DATA_ADDR);\n\n\t\t\t\t\t\twasm_wrapper.sleeping = true;\n\n\t\t\t\t\t\twasm_wrapper.threads[thread_addr].promise\n\t\t\t\t\t\t\t.then\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\twasm_wrapper.exports.asyncify_start_rewind(DATA_ADDR);\n\n\t\t\t\t\t\t\t\t\twasm_wrapper.async_func(...wasm_wrapper.async_args);\n\n\t\t\t\t\t\t\t\t\tif (wasm_wrapper.async_count % 2 === 0)\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\twasm_wrapper.async_promise_setter(true);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tterminateThread: (thread_addr) =>\n\t\t\t\t{\n\t\t\t\t\twasm_wrapper.threads[thread_addr].terminate();\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\tif\n\t(\n\t\t// self.Worker && // Safari doesn't allow workers to create Worker objects. Only main worker is allowed.\n\t\tself.SharedArrayBuffer &&\n\t\tself.Atomics\n\t)\n\t{\n\t\tif (self.window)\n\t\t{\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock: IDLE_FUNCTION,\n\t\t\t\t\tatomic_unlock: IDLE_FUNCTION,\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst UNLOCKED = 0;\n\t\t\tconst LOCKED = 1;\n\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timports_lib,\n\n\t\t\t\t{\n\t\t\t\t\tatomic_lock (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tdo\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tself.Atomics.wait(wasm_wrapper.memory_views.I32, __atomic_malloc_index, LOCKED, Infinity);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (self.Atomics.compareExchange(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED, LOCKED) === LOCKED);\n\t\t\t\t\t},\n\n\t\t\t\t\tatomic_unlock (atomic_addr)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst __atomic_malloc_index = atomic_addr / 4;\n\n\t\t\t\t\t\tself.Atomics.store(wasm_wrapper.memory_views.I32, __atomic_malloc_index, UNLOCKED);\n\t\t\t\t\t\tself.Atomics.notify(wasm_wrapper.memory_views.I32, __atomic_malloc_index, 1);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t}\n\n\treturn imports_lib;\n};\n","export default function ()\n{\n\tconst that = this;\n\n\n\n\tthis.options =\n\t\tObject.assign\n\t\t(\n\t\t\t{\n\t\t\t\t// 1024 b * 1024 b == 1048576 b == 1 mb\n\t\t\t\tthread_stack_size: 0x0100000,\n\t\t\t},\n\n\t\t\tthis.options,\n\t\t);\n\n\n\n\t[\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'Uint16Array',\n\t\t'Int16Array',\n\t\t'Uint32Array',\n\t\t'Int32Array',\n\t\t'Uint8Array',\n\t\t'Int8Array',\n\t\t'BigUint64Array',\n\t\t'BigInt64Array',\n\t\t'Float32Array',\n\t\t'Float64Array',\n\t]\n\t\t.forEach\n\t\t(\n\t\t\ttyped_array_name =>\n\t\t\t{\n\t\t\t\tif (self[typed_array_name])\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * byteOffset is an address in WASM memory.\n\t\t\t\t\t *\n\t\t\t\t\t * Array has to be used carefully, especially on mobile devices.\n\t\t\t\t\t * Undefined behavior may be occured in the following cases:\n\t\t\t\t\t * - Transferring array between workers (for both ArrayBuffer and SharedArrayBuffer).\n\t\t\t\t\t * - Calling slice().\n\t\t\t\t\t * ...\n\t\t\t\t\t */\n\n\t\t\t\t\tthis[typed_array_name] = class extends self[typed_array_name]\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tsuper(...args);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// length = args[0].length;\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst [ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlength = args[0];\n\n\t\t\t\t\t\t\t\tconst byteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tsuper(that.memory.buffer, byteOffset, length);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t// slice (...args) {}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis[`${ typed_array_name }2`] = class\n\t\t\t\t\t{\n\t\t\t\t\t\tconstructor (...args)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet byteOffset = 0;\n\t\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t\tthis.__allocated = false;\n\n\t\t\t\t\t\t\tif (args[0] instanceof self.ArrayBuffer || (self.SharedArrayBuffer && args[0] instanceof self.SharedArrayBuffer))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (args[0] === that.memory.buffer)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = args[1] || 0;\n\t\t\t\t\t\t\t\t\tlength = args[2] || (that.memory.buffer.byteLength / self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthrow new Error('wasm-wrapper typed array can not be backed by array buffer other than wasm-wrapper instance memory buffer.');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (typeof args[0] === 'object')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ { length } ] = args;\n\n\t\t\t\t\t\t\t\t// if (args[0].buffer === that.memory.buffer)\n\t\t\t\t\t\t\t\tif (args[0] instanceof that[typed_array_name] || args[0] instanceof that[`${ typed_array_name }2`])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[ { byteOffset } ] = args;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\n\t\t\t\t\t\t\t\t\tthis.set(args[0]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[ length ] = args;\n\n\t\t\t\t\t\t\t\tbyteOffset = that.exports.__malloc(length * self[typed_array_name].BYTES_PER_ELEMENT);\n\n\t\t\t\t\t\t\t\tthis.__allocated = true;\n\n\t\t\t\t\t\t\t\tObject.assign(this, { byteOffset, length });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tget buffer () { return that.memory.buffer; }\n\n\t\t\t\t\t\t__free () { that.exports.__free(this.byteOffset); }\n\n\t\t\t\t\t\t__getData () { return new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length); }\n\t\t\t\t\t};\n\n\t\t\t\t\t[\n\t\t\t\t\t\t'set',\n\t\t\t\t\t\t'slice',\n\t\t\t\t\t]\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tfunction_name =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis[`${ typed_array_name }2`].prototype[function_name] = function (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn (new self[typed_array_name](that.memory.buffer, this.byteOffset, this.length))[function_name](...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\n\n\n\t{\n\t\tthis.mem =\n\t\t// TODO: wrap into \"cxx\" prop.\n\t\t// TODO: add \"views\" props instead of using this.memory_views.\n\t\t{\n\t\t\t'bool': { kind: 'Uint' },\n\t\t\t'char': { kind: 'Uint' },\n\t\t\t'int': { kind: 'Int' },\n\t\t\t'short': { kind: 'Int' },\n\t\t\t'long': { kind: 'Int' },\n\t\t\t'size_t': { kind: 'Uint' },\n\t\t\t'addr': { kind: 'Uint' },\n\t\t\t'uint8_t': { kind: 'Uint' },\n\t\t\t'int8_t': { kind: 'Int' },\n\t\t\t'uint16_t': { kind: 'Uint' },\n\t\t\t'int16_t': { kind: 'Int' },\n\t\t\t'uint32_t': { kind: 'Uint' },\n\t\t\t'int32_t': { kind: 'Int' },\n\t\t\t'uint64_t': { kind: 'Uint' },\n\t\t\t'int64_t': { kind: 'Int' },\n\t\t\t'float': { kind: 'Float' },\n\t\t\t'double': { kind: 'Float' },\n\t\t\t'long_double': { kind: 'Float' },\n\t\t\t'c_string': {},\n\t\t};\n\n\t\tthis.type_names = Object.keys(this.mem);\n\n\t\tthis.type_names\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\t(type_name, type_name_index) =>\n\t\t\t\t{\n\t\t\t\t\tconst size = this.exports.__sizeof(type_name_index);\n\n\t\t\t\t\tlet typed_array_constructor_name = `${ this.mem[type_name].kind }${ size * 8 }Array`;\n\n\t\t\t\t\tif (!this[typed_array_constructor_name])\n\t\t\t\t\t{\n\t\t\t\t\t\ttyped_array_constructor_name = `Big${ typed_array_constructor_name }`;\n\t\t\t\t\t}\n\n\t\t\t\t\tObject.assign\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.mem[type_name],\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\ttyped_array_constructor: self[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm: this[typed_array_constructor_name],\n\t\t\t\t\t\t\ttyped_array_constructor_wasm2: this[`${ typed_array_constructor_name }2`],\n\t\t\t\t\t\t\tinterp_log: addr => this[type_name](addr)[0],\n\t\t\t\t\t\t\tinterp_thread: addr => this[type_name](addr),\n\t\t\t\t\t\t},\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tthis.mem.bool.interp_log = addr => Boolean(this.bool(addr)[0]),\n\n\t\tthis.mem.c_string.interp_log = addr => this.c_string2(this.addr(addr)[0]);\n\t\tthis.mem.c_string.interp_thread = addr => this.addr(addr);\n\t\tthis.mem.c_string.interp_arg = str => (new this.mem.char.typed_array_constructor_wasm(this.constructor.convertDomStringToUint8Array(str))).byteOffset;\n\t}\n\n\n\n\t{\n\t\tthis.memory_views = {};\n\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.UI8 = new self.Uint8Array(this.memory.buffer);\n\t\tthis.memory_views.I8 = new self.Int8Array(this.memory.buffer);\n\t\tthis.memory_views.UI16 = new self.Uint16Array(this.memory.buffer);\n\t\tthis.memory_views.I16 = new self.Int16Array(this.memory.buffer);\n\t\tthis.memory_views.UI32 = new self.Uint32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tthis.memory_views.I32 = new self.Int32Array(this.memory.buffer);\n\t\tif (self.BigUint64Array) { this.memory_views.UI64 = new self.BigUint64Array(this.memory.buffer); }\n\t\tif (self.BigInt64Array) { this.memory_views.I64 = new self.BigInt64Array(this.memory.buffer); }\n\t\tthis.memory_views.F32 = new self.Float32Array(this.memory.buffer);\n\t\tthis.memory_views.F64 = new self.Float64Array(this.memory.buffer);\n\t}\n}\n","/**\n * https://webassembly.org\n * https://webassembly.github.io/spec\n * https://github.com/WebAssembly\n * https://developer.mozilla.org/en-US/docs/WebAssembly\n * https://wasi.dev\n * https://lld.llvm.org/WebAssembly.html\n * https://github.com/bytecodealliance/wasmtime/blob/main/docs/WASI-documents.md\n * https://docs.wasmtime.dev/\n * https://v8.dev/\n *\n *\n *\n * Using TypedArray.subarray() is preferred\n * when accessing to data\n * to avoid extra memory allocation.\n *\n *\n *\n * Strange std::string behavior:\n * if std::string data length <=11, std::string object address is the same with its data;\n * if >11, std::string object name stores address of beginning of the data.\n * So in second case one can use WasmWrapper::c_string method to get string bytes.\n * Maybe it's not related to data length, but to dynamic memory allocation.\n *\n *\n *\n * If memory is shared then maximum memory size is specified at compilation.\n *\n *\n *\n * Passing argument by reference works as passing by pointer.\n * So, functions with reference parameters expect address instead of value.\n *\n *\n *\n * TODO: determination capabiity of what wasm memory type is being used.\n *\n *\n *\n * 1 page == 65536 bytes == 0.0625 mb.\n * 1 mb == 16 pages.\n * 1gb == 16384 pages.\n * 4gb == 65536 pages (maximum memory size for wasm32).\n */\n\n\n\n/*\neslint-disable\n\nmax-statements,\n*/\n\n\n\n// Webpack arraybuffer-loader is required.\n// import test_simd_wasm_buffer from './test-simd/build/clang-wasm32/output/wasm/test-simd.wasm';\n\nimport configureMemory from './memory';\nimport getImports from './imports';\nimport cxx_specific_functions from './cxx-specific';\n\n\n\nconst __CODE_TYPE_BYTECODE__ = 0;\nconst __CODE_TYPE_FUNCTION__ = 1;\n\n\n\nconst IDLE_FUNCTION = () => 0;\n\nconst ERROR_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: red; padding: 2px;', ...args.slice(1));\nconst WARN_LOG = (...args) => console.log(`%c${ args[0] }`, 'background-color: #8B8000; padding: 2px;', ...args.slice(1));\n\nconst DEBUG_INFO = [];\n\nconst DEBUG_INFO_PUSH = (...args) => DEBUG_INFO.push(args);\n\nconst DEBUG_INFO_LOG = thread_id =>\n{\n\tDEBUG_INFO.forEach(label => console.log(`%c${ thread_id }: ${ label[0] }`, 'background-color: #00858A; padding: 2px;', ...label.slice(1)));\n\n\tDEBUG_INFO.length = 0;\n};\n\n\n\nDEBUG_INFO_PUSH(`WASM CONCURRENCY: ${ self.navigator.hardwareConcurrency }`);\n\n\n\nclass WasmWrapper\n{\n\tstatic text_decoder = new self.TextDecoder('utf-8');\n\tstatic text_encoder = new self.TextEncoder();\n\n\tstatic convertUint8ArrayToDomString (uint8array)\n\t{\n\t\t// return WasmWrapper.text_decoder.decode(uint8_array);\n\t\t// return WasmWrapper.text_decoder.decode(uint8array.slice());\n\t\treturn WasmWrapper.text_decoder.decode(new self.Uint8Array(uint8array)); // Decoding view of shared buffer is not allowed so need new instance.\n\t}\n\n\tstatic convertDomStringToUint8Array (text)\n\t{\n\t\treturn WasmWrapper.text_encoder.encode(text);\n\t}\n\n\tstatic async testSimd ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\t// webpack arraybuffer-loader has to be installed when using the library with soures files.\n\t\t\t// const wasm_buffer = (await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm')).default;\n\t\t\tconst wasm_buffer = (await import('./test-simd/build/test.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(wasm_buffer);\n\n\t\t\tconst instance = await WebAssembly.instantiate(wasm_module);\n\n\t\t\t// // Webpack since version 4 has embedded WASM parser.\n\t\t\t// // MIME type \"application/wasm\" must be defined for \".wasm\" extension on server.\n\t\t\t// // TODO: use another type of importing ?\n\t\t\t// await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm');\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tERROR_LOG(`WASM SIMD TEST FAILED: ${ error }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM SIMD: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * memory.atomic.wait can't be called in main worker\n\t * so need to make the test in another worker.\n\t */\n\n\tstatic async testAtomics ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\tconst wasm_buffer = (await import('./test-atomic/build/test.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(wasm_buffer);\n\n\t\t\tconst instance = await WebAssembly.instantiate(wasm_module);\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tERROR_LOG(`WASM ATOMIC TEST FAILED: ${ error }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM ATOMIC: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\tconstructor (options = {})\n\t{\n\t\tself.__wasm_wrapper__ = this;\n\n\t\tthis.options = options;\n\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass ThreadPromiseBunch\n\t\t{\n\t\t\tconstructor ()\n\t\t\t{\n\t\t\t\t// TODO: rename to run_count.\n\t\t\t\tthis.running_count = 0;\n\t\t\t}\n\n\t\t\trun (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twasm_wrapper.exports.__initHeapPointer();\n\n\t\t\t\treturn Promise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twasm_wrapper.exports.__resetHeapPointer();\n\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.run(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\trunLog (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twasm_wrapper.exports.__initHeapPointer();\n\n\t\t\t\tLOG('ThreadPromiseBunch start __heap_pointer', wasm_wrapper.addr(wasm_wrapper.globals.__heap_pointer)[0])\n\n\t\t\t\treturn Promise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tLOG('ThreadPromiseBunch end __heap_pointer', wasm_wrapper.addr(wasm_wrapper.globals.__heap_pointer)[0])\n\n\t\t\t\t\t\t\twasm_wrapper.exports.__resetHeapPointer();\n\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.run(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\tasync runAsync (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\tthis.callback_next1 = callback1;\n\t\t\t\t\tthis.callback_next2 = callback2;\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twasm_wrapper.exports.__initHeapPointer();\n\n\t\t\t\treturn Promise.all(await callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(\n\t\t\t\t\t\tresolves =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twasm_wrapper.exports.__resetHeapPointer();\n\n\t\t\t\t\t\t\tcallback2(resolves);\n\n\t\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\t\treturn this.runAsync(this.callback_next1, this.callback_next2);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t}\n\n\t\t\trun2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\twasm_wrapper.exports.__initHeapPointer();\n\n\t\t\t\treturn Promise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.exports.__resetHeapPointer();\n\n\t\t\t\t\t\tcallback2();\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tasync runAsync2 (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\twasm_wrapper.exports.__initHeapPointer();\n\n\t\t\t\treturn Promise.all(await callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\twasm_wrapper.exports.__resetHeapPointer();\n\n\t\t\t\t\t\tcallback2();\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.ThreadPromiseBunch = ThreadPromiseBunch;\n\t}\n\n\tfunction (addr)\n\t{\n\t\treturn this.exports.__indirect_function_table.get(addr);\n\t}\n\n\tasync async (_function, ...args)\n\t{\n\t\tthis.async_args = args;\n\n\t\t(this.async_func = _function)(...args);\n\n\t\tthis.exports.asyncify_stop_unwind();\n\n\t\tawait this.async_promise;\n\n\t\tthis.async_count = 0;\n\t}\n\n\tasync instantiate ({ wasm_module_imports, imports_lib, imports_custom, wasm_module, code, debug })\n\t{\n\t\t// Object for passing to threads.\n\t\tthis.imports_thread = { env: {} };\n\n\t\tObject.keys(imports_custom)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmodule =>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(imports_custom[module])\n\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\timport_custom =>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!this.imports_thread[module])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.imports_thread[module] = {};\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tthis.imports_thread[module][import_custom] = 0;\n\n\t\t\t\t\t\t\t\t// TODO: use \"|=\" operator ?\n\t\t\t\t\t\t\t\t// If (imports_custom[module][import_custom] === 0) then make it IDLE_FUNCTION.\n\t\t\t\t\t\t\t\timports_custom[module][import_custom] = imports_custom[module][import_custom] || IDLE_FUNCTION;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t);\n\n\t\tconst imports_aggregate = {};\n\n\t\tObject.assign(imports_aggregate, imports_custom);\n\n\t\tObject.assign\n\t\t(\n\t\t\timports_aggregate.env,\n\n\t\t\timports_lib\n\t\t);\n\n\t\t// Imported memory\n\t\tif (this.memory)\n\t\t{\n\t\t\timports_aggregate.env.memory = this.memory;\n\t\t}\n\n\t\twasm_module_imports\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\twasm_module_import =>\n\t\t\t\t{\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module])\n\t\t\t\t\t{\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!imports_aggregate[wasm_module_import.module][wasm_module_import.name])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (debug)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tWARN_LOG(`Missed ${ wasm_module_import.module } import:`, wasm_module_import.name);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timports_aggregate[wasm_module_import.module][wasm_module_import.name] = IDLE_FUNCTION;\n\t\t\t\t\t\t// imports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\n\t\t\t\t\t\t// if (wasm_module_import.name !== 'clock_time_get')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = () => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); };\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t// if (wasm_module_import.name === 'fd_write')\n\t\t\t\t\t\t// {\n\t\t\t\t\t\t// \timports_aggregate[wasm_module_import.module][wasm_module_import.name] = (...args) => { MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ wasm_module_import.module }\", function \"${ wasm_module_import.name }\"`); LOG(args.map(arg => this.CString2(arg))); };\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\tlet exports = null;\n\n\t\tif (wasm_module)\n\t\t{\n\t\t\tconst wasm_module_instance =\n\t\t\t\tawait WebAssembly.instantiate\n\t\t\t\t// await WebAssembly.instantiateStreaming\n\t\t\t\t(\n\t\t\t\t\twasm_module,\n\n\t\t\t\t\timports_aggregate,\n\t\t\t\t);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE INSTANCE:', wasm_module_instance);\n\t\t\t}\n\n\t\t\t// this.instance = wasm_module_instance;\n\n\t\t\t({ exports } = wasm_module_instance);\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// imports_aggregate.wasi_snapshot_preview1 = {};\n\t\t\t// imports_aggregate.wasi_snapshot_preview1.fd_write = (...args) => LOG(args.map(arg => this.c_string2(arg)));\n\n\t\t\texports = code(imports_aggregate);\n\t\t}\n\n\t\t// Exported memory\n\t\tif (!this.memory)\n\t\t{\n\t\t\tthis.memory = exports.memory;\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ this.memory.buffer.byteLength / 65536 } pages (${ this.memory.buffer.byteLength } bytes)`);\n\n\t\treturn exports;\n\t}\n\n\tasync init\n\t({\n\t\t// TODO: reorder.\n\t\tcode,\n\t\tmemory = null,\n\t\t// Initial and minimum memory sizes must be greater than heap base.\n\t\tmemory_params = { minimum: 1, initial: 1, maximum: 65536, shared: true },\n\t\timports: imports_custom = { env: {} },\n\t\tstack_pointer = undefined,\n\t\tconfigureMemory = true,\n\t\tforceLocalMemory = false,\n\t\tinitGlobals = true,\n\t\tdemangleCxxNames = false,\n\t\tdebug = false,\n\t})\n\t{\n\t\tlet code_type = null;\n\n\t\t// Code for passing to other WASM instances (e.g. threads).\n\t\tthis.code = code;\n\n\t\tif (typeof code === 'string')\n\t\t{\n\t\t\tif (code.startsWith('function'))\n\t\t\t{\n\t\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\t\tcode = new Function(code);\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string function -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t\t// base64\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Uint8Array.from(atob(code), c => c.charCodeAt(0));\n\n\t\t\t\t// TODO: Make code shared (if can) to speed up passing it to workers. DONE?\n\t\t\t\tif (self.SharedArrayBuffer)\n\t\t\t\t{\n\t\t\t\t\tconst code_temp = code;\n\n\t\t\t\t\tcode = new Uint8Array(new SharedArrayBuffer(code.length));\n\n\t\t\t\t\tcode.set(code_temp);\n\t\t\t\t}\n\n\t\t\t\tthis.code = code;\n\n\t\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string base64 -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t}\n\t\telse if (typeof code === 'function')\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\tthis.code = code.toString();\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: function`);\n\t\t}\n\t\t// Code is an Uint8Array backed (SharedArrayBuffer optionally) or ArrayBuffer or SharedArrayBuffer.\n\t\t// UPD. SharedArrayBuffer can not be used as source for WebAssembly module, only for Uint8Array\n\t\t// backed by SharedArrayBuffer.\n\t\telse\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code.constructor.name }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code_type === __CODE_TYPE_BYTECODE__ ? 'BYTECODE' : 'FUNCTION' }`);\n\n\n\n\t\tconst imports_lib = getImports(this);\n\n\n\n\t\tif (code_type === __CODE_TYPE_BYTECODE__)\n\t\t{\n\t\t\tconst wasm_module = await WebAssembly.compile(code);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM MODULE: ', wasm_module);\n\t\t\t}\n\n\t\t\tconst wasm_module_imports = WebAssembly.Module.imports(wasm_module);\n\t\t\t// const wasm_module_exports = WebAssembly.Module.exports(wasm_module);\n\n\t\t\tthis.memory = null;\n\n\t\t\t// Memory comes from WASM main worker instance to thread instance.\n\t\t\t// is always imported and shared.\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: SHARED')\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst [ imported_memory ] =\n\t\t\t\t\twasm_module_imports\n\t\t\t\t\t\t.filter((import_desc) => (import_desc.kind === 'memory'));\n\n\t\t\t\tconst shared_memory_allowed = Boolean(self.SharedArrayBuffer) && !forceLocalMemory;\n\n\t\t\t\tif (imported_memory)\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\n\t\t\t\t\tlet memory_desc = null;\n\n\t\t\t\t\tif (imported_memory.type)\n\t\t\t\t\t{\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * chrome://flags#enable-experimental-webassembly-features must be enabled\n\t\t\t\t\t\t * to access \"type\" property of \"imported_memory\". It contains memory\n\t\t\t\t\t\t * type and size info produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * \"--import-memory\" linker flag specifies whether memory is imported to WebAssembly module.\n\t\t\t\t\t\t * \"--shared-memory\" linker flag specifies whether memory is shared between WebAssembly instances.\n\t\t\t\t\t\t * \"--max-memory=N\" linker flag specifies maximum size of memory for WebAssembly instance.\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * The advantqge of this is that we don't need to provide \"memory_params\"\n\t\t\t\t\t\t * to crate the memory object. Memory object is created automatically\n\t\t\t\t\t\t * after reading the \"imported_memory.type\".\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinitial: imported_memory.type.minimum,\n\t\t\t\t\t\t\tmaximum: imported_memory.type.maximum || imported_memory.type.minimum,\n\t\t\t\t\t\t\tshared: imported_memory.type.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t// Parameters must match values produced by the linker (aka defined in WebAssembly module).\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tmemory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// 65536 pages == 4gb, maximum possible memory size for 32-bit WebAssembly instance.\n\t\t\t\t\t\t\tinitial: memory_params.initial,\n\t\t\t\t\t\t\tmaximum: memory_params.maximum, // Must match \"--max-memory=N\" flag.\n\t\t\t\t\t\t\t// shared, // Must match \"--shared-memory\" flag.\n\t\t\t\t\t\t\tshared: memory_params.shared && shared_memory_allowed,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.memory = new WebAssembly.Memory(memory_desc);\n\n\t\t\t\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ memory_desc.shared ? 'SHARED' : 'NOT SHARED' }`)\n\t\t\t\t}\n\t\t\t\t// TODO: add the case when memory is imported but can be created with arbitrary parameters.\n\t\t\t\t// Is this case possible? Meybe possible only when memory is not shared?\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: EXPORTED')\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, wasm_module, debug });\n\t\t}\n\t\telse\n\t\t{\n\t\t\t/**\n\t\t\t * Initializes WasmWrapper instance with JS code compiled from WASM with wasm2js.\n\t\t\t * In this case presume WASM instances don't use shared memory and exported memory.\n\t\t\t * Compiler option \"-matomics\" must not be used.\n\t\t\t * Linker option \"--shared-memory\" must not be used.\n\t\t\t * wasm2js options \"--disable-threads\", \"--emscripten\" must be used.\n\t\t\t */\n\n\t\t\tthis.memory = null;\n\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.memory = { buffer: new self.ArrayBuffer(Math.imul(memory_params.initial, memory_params.maximum)) };\n\t\t\t}\n\n\t\t\t// TODO: Find better solution to get import modules used.\n\t\t\t// Now it is hardcoded.\n\t\t\tconst wasm_module_imports =\n\t\t\t[\n\t\t\t\t{ module: 'env' },\n\t\t\t\t{ module: 'wasi_snapshot_preview1' },\n\t\t\t];\n\n\t\t\tthis.exports = await this.instantiate({ wasm_module_imports, imports_lib, imports_custom, code, debug });\n\t\t}\n\n\n\n\t\tif (configureMemory)\n\t\t{\n\t\t\tthis.configureMemory();\n\t\t}\n\n\t\tif (this.exports.__main)\n\t\t{\n\t\t\tthis.__thread_id = this.exports.__main(stack_pointer);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_LOG(this.__thread_id);\n\t\t\t}\n\t\t}\n\n\t\tif (initGlobals)\n\t\t{\n\t\t\tthis.globals = this.initGlobals();\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM GLOBALS:', this.globals);\n\t\t\t}\n\t\t}\n\n\t\tif (demangleCxxNames)\n\t\t{\n\t\t\tconst { exports_demangled, exports_demangled_reduced } = this.demangleCxxNames();\n\n\t\t\tObject.assign(this, { exports_demangled, exports_demangled_reduced });\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled);\n\t\t\t\tDEBUG_INFO_PUSH('WASM EXPORTS DEMANGLED: ', this.exports_demangled_reduced);\n\t\t\t}\n\t\t}\n\t}\n\n\tinitGlobals ()\n\t{\n\t\tconst globals = {};\n\n\t\tconst prefix_length = '__EXPORT_ADDR__'.length;\n\n\t\tObject.keys(this.exports)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\texport_name =>\n\t\t\t\t{\n\t\t\t\t\tif (export_name.startsWith('__EXPORT_ADDR__'))\n\t\t\t\t\t{\n\t\t\t\t\t\tglobals[export_name.slice(prefix_length)] = this.exports[export_name]();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn globals;\n\t}\n\n\tgetNewThread () { return new WasmWrapper.Thread(this); }\n\tgetNewThread2 () { return new WasmWrapper.Thread2(this); }\n\tgetNewThread3 () { return new WasmWrapper.Thread3(this); }\n\tgetNewThread4 () { return new WasmWrapper.Thread4(this); }\n\n\tasync initThreads (thread_count)\n\t{\n\t\tconst threads =\n\t\t\tnew Array(thread_count)\n\t\t\t\t.fill(null)\n\t\t\t\t.map(() => new WasmWrapper.Thread3(this));\n\n\t\tawait Promise.all(threads.map(thread => thread.init()));\n\n\t\treturn threads;\n\t}\n\n\tterminateThreads (threads)\n\t{\n\t\tthreads\n\t\t\t.reverse()\n\t\t\t.forEach(thread => thread.terminate());\n\t}\n}\n\n\n\nWasmWrapper.prototype.configureMemory = configureMemory;\n\nObject.assign(WasmWrapper.prototype, cxx_specific_functions);\n\n\n\nexport default WasmWrapper;\n","import '@babel/runtime/regenerator';\n\nimport WasmWrapper from '../../wasm-wrapper';\n\n\n\nconst wasm = new WasmWrapper();\n\n\n\nonmessage =\n\tasync ({ data }) =>\n\t{\n\t\tconst [ function_addr, thread_types_addr, thread_values_addr ] = data.data;\n\n\t\tawait wasm.init(data);\n\n\t\tconst _function = wasm.function(function_addr);\n\n\t\tconst arg_types = wasm.size_t(thread_types_addr, _function.length);\n\n\t\tconst args = new Array(_function.length);\n\n\t\tconst any_value_size = wasm.size_t(wasm.globals.__any_value_size)[0];\n\n\t\tfor (let i = 0; i < _function.length; ++i)\n\t\t{\n\t\t\tconst type_name = wasm.type_names[arg_types[i]];\n\n\t\t\targs[i] = wasm.mem[type_name].interp_thread(thread_values_addr + (any_value_size * i))[0];\n\t\t}\n\n\t\tpostMessage(_function(...args));\n\t};\n\nexport default 0;\n"],"sourceRoot":""}