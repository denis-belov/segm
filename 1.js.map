{"version":3,"sources":["webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/regenerator/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/node_modules/@babel/runtime/helpers/typeof.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/wasm-wrapper.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/common/call.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread/thread.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread2/thread2.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread2/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3/thread3.1.worker.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/threads/thread3/index.js","webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/index.js"],"names":["runtime","require","module","exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_typeof","_regeneratorRuntime","__esModule","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","IDLE_FUNCTION","DEBUG_LOG","console","log","bind","DEBUG_INFO","DEBUG_INFO_PUSH","content","WasmWrapper","options","wasm_wrapper","assign","thread_stack_size","ADDR_SIZE","SIZE_SIZE","UINT32_SIZE","FLOAT_SIZE","DOUBLE_SIZE","INT_SIZE","memory_views","UI8","I8","UI16","I16","UI32","I32","F32","F64","interp","size","Int","Size","Float","Double","Addr","__heap_pointer_init","custom_functions","console_log","types_addr","values_addr","arg_types","args","Array","any_type_size","__getAnyvalueSize__","CString2","convertUint8ArrayToDomString","StdString","console_log2","date_now","Date","now","js_loop","function_addr","_function","setInterval","rdty_sleep","duration","sleeping","asyncify_stop_rewind","DATA_ADDR","asyncify_start_unwind","setTimeout","asyncify_start_rewind","window","SharedArrayBuffer","runThread","thread_addr","thread_types_addr","thread_values_addr","threads","thread","Thread2","RDTY_WASM_WRAPPER_getStdVectorData","joinThread","async_count","async_promise","async_promise_setter","promise","async_func","async_args","terminateThread","terminate","LOCKED","UNLOCKED","malloc_lock","malloc_unlock","__atomic_malloc_index","__getAtomicMalloc__","Atomics","compareExchange","wait","store","notify","malloc","_size","Math","max","pow","ceil","position","log2","addr","__heap_segments","__heap_pointer","__getHeapPointer__","free","realloc","calloc","__libc_malloc","__libc_realloc","__libc_calloc","__libc_free","posix_memalign","DataBase","type_size","RDTY_WASM_WRAPPER_malloc","data","set","_data","offset","RDTY_WASM_WRAPPER_free","DataFloat","DataUint32","ThreadPromiseBunch","running_count","callback1","callback2","LOG","all","resetHeapPointer","run","subarray","_addr","__indirect_function_table","get","vend","Char","CStringLen","RDTY_WASM_WRAPPER_getStdStringData","RDTY_WASM_WRAPPER_getStdStringSize","RDTY_WASM_WRAPPER_getStdVectorSize","Uint8","Uint32","_Class","input","Addr2","exports_demangled","filter","member_name","includes","member_name_trimmed","replace","wasm_object","parameters","match","split","overloaded","New","NewWrapper","RDTY_WASM_WRAPPER_StdVector_resize","StdVector","fill","debug","demangled_name_addr","exports_demangled_reduced","reduce","_name","startsWith","convertDomStringToUint8Array","demangled_name","CString","RDTY_WASM_WRAPPER_demangleCxxName","isArray","first_entry","buffer","Uint8Array","Int8Array","Uint16Array","Int16Array","Uint32Array","Int32Array","Float32Array","Float64Array","RDTY_WASM_WRAPPER_sizeof","SIMD","__getSimd__","asyncify_stop_unwind","code","memory","imports","env","stack_pointer","doCommons","forceLocalMemory","memory_params","minimum","maximum","initial","demangleCxxNames","code_type","from","atob","c","charCodeAt","code_temp","toString","WebAssembly","compile","wasm_module","wasm_module_imports","Module","import_desc","kind","imported_memory","shared","Boolean","memory_desc","Memory","import_modules","_import","instantiate","wasm_module_instance","ArrayBuffer","imports_env","setStackPointer","__getHeapSegments__","_main","__lock__","__getAtomicThreadId__","__getThreadId__","label","__unlock__","thread_count","map","Thread3","init","uint8_array","text_decoder","decode","text","text_encoder","encode","test_simd_wasm_buffer","TextDecoder","TextEncoder","_index","_call","wasm","message_data","function_name","try_wrap","evt","onmessage","postMessage","empty_array","Thread","freeWorkedMemory","stack_addr","worker","Worker","RDTY_WASM_WRAPPER_ANYVALUE_SIZE","active","work","_Thread","_Thread2","_Thread3"],"mappings":"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","file":"1.js","sourcesContent":["// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) {\n              if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            }\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Using TypedArray.subarray() is preferred\n * when accessing to data\n * to avoid extra memory allocation.\n *\n * Strange std::string behavior:\n * if std::string data length <=11, std::string object address is the same with its data;\n * if >11, std::string object name stores address of beginning of the data.\n * So in second case one can use WasmWrapper::CString method to get string bytes.\n * Maybe it's not related to data length, but to dynamic memory allocation.\n *\n *\n *\n * If memory is shared then memory growing is not allowed\n * and maximum memory size is specified at compilation.\n *\n *\n *\n * Passing argument by reference works as passing by pointer.\n * So, functions with reference parameters expect address instead of value.\n *\n *\n *\n * TODO: determination capabiity of what wasm memory type is being used.\n */\n\n\n\n// Webpack arraybuffer-loader is required.\n// import test_simd_wasm_buffer from './test-simd/build/clang-wasm32/output/wasm/test-simd.wasm';\n\n\n\nconst __CODE_TYPE_BYTECODE__ = 0;\nconst __CODE_TYPE_FUNCTION__ = 1;\n\n\n\nconst IDLE_FUNCTION = () => 0;\n\nconst DEBUG_LOG = console.log.bind(console);\n// const DEBUG_LOG = (...content) => console.log(...content.map(elm => `%c${ elm }`), 'background-color: #00858A; padding: 2px;');\n\nconst DEBUG_INFO = [];\n\nconst DEBUG_INFO_PUSH = (content) => DEBUG_INFO.push(content);\n\nconst DEBUG_LABEL_LOG = () =>\n{\n\tDEBUG_INFO.forEach(label => console.log(`%c${ label }`, 'background-color: #00858A; padding: 2px;'));\n\n\tDEBUG_INFO.length = 0;\n};\n\nconst MISSED_IMPORT_FUNCTION_LOG = (content) => console.log(`%c${ content }`, 'background-color: red; padding: 2px;');\n\n\n\nclass WasmWrapper\n{\n\tstatic text_decoder = new TextDecoder('utf-8');\n\tstatic text_encoder = new TextEncoder();\n\n\t// static convertUint8ArrayToDomString (uint8_array)\n\t// {\n\t// \treturn WasmWrapper.text_decoder.decode(uint8_array);\n\t// }\n\n\t// Version for shared buffer.\n\t// Decoding views of shared buffer is not allowed.\n\tstatic convertUint8ArrayToDomString (uint8_array)\n\t{\n\t\treturn WasmWrapper.text_decoder.decode(uint8_array.slice());\n\t}\n\n\tstatic convertDomStringToUint8Array (text)\n\t{\n\t\treturn WasmWrapper.text_encoder.encode(text);\n\t}\n\n\tstatic async testSimd ()\n\t{\n\t\tlet result = false;\n\n\t\ttry\n\t\t{\n\t\t\t// webpack arraybuffer-loader has to be installed when using the library with soures files.\n\t\t\tconst test_simd_wasm_buffer = (await import('./test-simd/build/clang-wasm32/output/wasm/test-simd.wasm')).default;\n\n\t\t\tconst wasm_module = await WebAssembly.compile(test_simd_wasm_buffer);\n\n\t\t\t// LOG(WebAssembly.Module.exports(wasm_module))\n\t\t\t// LOG(WebAssembly.Module.imports(wasm_module))\n\n\t\t\tawait WebAssembly.instantiate\n\t\t\t(\n\t\t\t\twasm_module,\n\n\t\t\t\t{\n\t\t\t\t\tenv:\n\t\t\t\t\t{\n\t\t\t\t\t\tmemory:\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tnew WebAssembly.Memory\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tinitial: 2,\n\t\t\t\t\t\t\t\tmaximum: 2,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\n\t\t\tresult = true;\n\t\t}\n\t\tcatch (_) {}\n\n\t\tDEBUG_INFO_PUSH(`WASM SIMD: ${ result ? 'ON' : 'OFF' }`);\n\n\t\treturn result;\n\t}\n\n\tconstructor (options = {})\n\t{\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tthis.options =\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\t{\n\t\t\t\t\t// 1024 b * 1024 b == 1048576 b == 1 mb\n\t\t\t\t\tthread_stack_size: 0x0100000,\n\t\t\t\t},\n\n\t\t\t\toptions,\n\t\t\t);\n\n\n\n\t\t// TODO: reorder.\n\t\t// TODO: order type related objects the same.\n\t\tthis.ADDR_SIZE = 0;\n\t\tthis.SIZE_SIZE = 0;\n\t\tthis.UINT32_SIZE = 0;\n\t\tthis.FLOAT_SIZE = 0;\n\t\tthis.DOUBLE_SIZE = 0;\n\t\tthis.INT_SIZE = 0;\n\n\t\tthis.memory_views =\n\t\t{\n\t\t\tUI8: null,\n\t\t\tI8: null,\n\t\t\tUI16: null,\n\t\t\tI16: null,\n\t\t\tUI32: null,\n\t\t\tI32: null,\n\t\t\t// TODO: add 64 bit types.\n\t\t\tF32: null,\n\t\t\tF64: null,\n\t\t};\n\n\t\tthis.interp =\n\t\t[\n\t\t\t(val, size) => wasm_wrapper.Int(val, size),\n\t\t\t(val, size) => wasm_wrapper.Size(val, size),\n\t\t\t(val, size) => wasm_wrapper.Float(val, size),\n\t\t\t(val, size) => wasm_wrapper.Double(val, size),\n\n\t\t\t// const char*\n\t\t\t(val, size) => wasm_wrapper.Addr(val, size),\n\n\t\t\t// void*\n\t\t\t(val, size) => wasm_wrapper.Addr(val, size),\n\t\t];\n\n\t\tthis.__heap_pointer_init = 0;\n\n\n\n\t\tconst custom_functions =\n\t\t{\n\t\t\tconsole_log: (size, types_addr, values_addr) =>\n\t\t\t{\n\t\t\t\tconst arg_types = this.Size(types_addr, size);\n\n\t\t\t\tconst args = new Array(size);\n\n\t\t\t\t// const any_type_size = this.Size(this.exports.RDTY_WASM_WRAPPER_ANYVALUE_SIZE)[0];\n\t\t\t\tconst any_type_size = this.Size(this.exports.__getAnyvalueSize__())[0];\n\n\t\t\t\tfor (let i = 0; i < size; ++i)\n\t\t\t\t{\n\t\t\t\t\t// const char*\n\t\t\t\t\tif (arg_types[i] === 4)\n\t\t\t\t\t{\n\t\t\t\t\t\targs[i] = this.CString2(this.Addr(values_addr + (any_type_size * i))[0]);\n\t\t\t\t\t}\n\t\t\t\t\t// std::string\n\t\t\t\t\telse if (arg_types[i] === 6)\n\t\t\t\t\t{\n\t\t\t\t\t\targs[i] = WasmWrapper.convertUint8ArrayToDomString(this.StdString(values_addr + (any_type_size * i)));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\targs[i] = this.interp[arg_types[i]](values_addr + (any_type_size * i))[0];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...args);\n\t\t\t},\n\n\t\t\tconsole_log2: (...value) =>\n\t\t\t{\n\t\t\t\tconsole.log('%cWASM:', 'color: #bada55', ...value);\n\t\t\t},\n\n\t\t\tdate_now: () => Date.now(),\n\n\t\t\tjs_loop: (function_addr, ...args) =>\n\t\t\t{\n\t\t\t\tconst _function = this.Function(function_addr);\n\n\t\t\t\t// setInterval(_function, 1000, ...args);\n\t\t\t\tsetInterval(_function, 0, ...args);\n\t\t\t},\n\n\t\t\trdty_sleep: (duration) =>\n\t\t\t{\n\t\t\t\t// Global state for running the program.\n\n\t\t\t\tconst DATA_ADDR = 16;\n\n\t\t\t\tif (!this.sleeping)\n\t\t\t\t{\n\t\t\t\t\t// We are called in order to start a sleep/unwind.\n\t\t\t\t\t// console.log('sleep...');\n\t\t\t\t\t// Fill in the data structure. The first value has the stack location,\n\t\t\t\t\t// which for simplicity we can start right after the data structure itself.\n\t\t\t\t\tthis.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t\t// The end of the stack will not be reached here anyhow.\n\n\t\t\t\t\t// TODO: use stack_size\n\t\t\t\t\tthis.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\t\t\t\t\tthis.exports.asyncify_start_unwind(DATA_ADDR);\n\t\t\t\t\tthis.sleeping = true;\n\n\t\t\t\t\t// Resume after the proper delay.\n\t\t\t\t\tsetTimeout\n\t\t\t\t\t(\n\t\t\t\t\t\t() =>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// console.log('timeout ended, starting to rewind the stack');\n\t\t\t\t\t\t\tthis.exports.asyncify_start_rewind(DATA_ADDR);\n\t\t\t\t\t\t\t// The code is now ready to rewind; to start the process, enter the\n\t\t\t\t\t\t\t// first function that should be on the call stack.\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tduration,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// We are called as part of a resume/rewind. Stop sleeping.\n\t\t\t\t\t// console.log('...resume');\n\t\t\t\t\tthis.exports.asyncify_stop_rewind();\n\t\t\t\t\tthis.sleeping = false;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\t// If this is main worker.\n\t\tif (self.window && self.SharedArrayBuffer)\n\t\t{\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\tcustom_functions,\n\n\t\t\t\t{\n\t\t\t\t\trunThread: (function_addr, thread_addr, thread_types_addr, thread_values_addr) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!this.threads)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.threads = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst thread =\n\t\t\t\t\t\t\tnew WasmWrapper.Thread2\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tthis,\n\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tfunction_addr,\n\t\t\t\t\t\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(thread_types_addr),\n\t\t\t\t\t\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(thread_values_addr)\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tthis.threads[thread_addr] = thread;\n\t\t\t\t\t},\n\n\t\t\t\t\tjoinThread: (thread_addr) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.async_count = this.async_count || 0;\n\n\t\t\t\t\t\t++this.async_count;\n\n\t\t\t\t\t\tif (this.async_count === 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.async_promise =\n\t\t\t\t\t\t\t\tnew Promise\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tresolve =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.async_promise_setter = (val) =>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tif (val)\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst DATA_ADDR = 16;\n\n\t\t\t\t\t\tif (!this.sleeping)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.memory_views.I32[DATA_ADDR >> 2] = DATA_ADDR + 8;\n\t\t\t\t\t\t\tthis.memory_views.I32[DATA_ADDR + 4 >> 2] = 1024 * 1024;\n\n\t\t\t\t\t\t\tthis.exports.asyncify_start_unwind(DATA_ADDR);\n\n\t\t\t\t\t\t\tthis.sleeping = true;\n\n\t\t\t\t\t\t\tthis.threads[thread_addr].promise\n\t\t\t\t\t\t\t\t.then\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.exports.asyncify_start_rewind(DATA_ADDR);\n\n\t\t\t\t\t\t\t\t\t\tthis.async_func(...this.async_args);\n\n\t\t\t\t\t\t\t\t\t\tif (this.async_count % 2 === 0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tthis.async_promise_setter(true);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.exports.asyncify_stop_rewind();\n\n\t\t\t\t\t\t\tthis.sleeping = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\tterminateThread: (thread_addr) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.threads[thread_addr].terminate();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\t// \"malloc\" and \"free\" WASI-libc functions are not thread-safe\n\t\t// since they operate with the same heap. To be able to use these functions\n\t\t// in multiple threads we need to specify them as imports and remove the part of\n\t\t// WASI-libc where they are defined (dlmalloc.o):\n\t\t// ${ DIR_WASI }/bin/llvm-ar -d ${ DIR_WASI }/share/wasi-sysroot/lib/wasm32-wasi/libc.a dlmalloc.o\n\t\t{\n\t\t\tconst LOCKED = 0;\n\t\t\tconst UNLOCKED = 1;\n\n\t\t\tlet malloc_lock = IDLE_FUNCTION;\n\t\t\tlet malloc_unlock = IDLE_FUNCTION;\n\n\t\t\tif (!self.window)\n\t\t\t{\n\t\t\t\tmalloc_lock = () =>\n\t\t\t\t{\n\t\t\t\t\tconst __atomic_malloc_index = this.exports.__getAtomicMalloc__() / 4;\n\n\t\t\t\t\twhile (true)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst old_state =\n\t\t\t\t\t\t\tAtomics.compareExchange\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tthis.memory_views.I32,\n\t\t\t\t\t\t\t\t__atomic_malloc_index,\n\t\t\t\t\t\t\t\t/* old state >>> */ UNLOCKED,\n\t\t\t\t\t\t\t\t/* new state >>> */ LOCKED,\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (old_state === UNLOCKED)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tAtomics.wait(this.memory_views.I32, __atomic_malloc_index, LOCKED);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Atomics.wait(this.memory_views.I32, __atomic_malloc_index, LOCKED);\n\t\t\t\t\t// Atomics.store(this.memory_views.I32, __atomic_malloc_index, LOCKED);\n\t\t\t\t};\n\n\t\t\t\tmalloc_unlock = () =>\n\t\t\t\t{\n\t\t\t\t\tconst __atomic_malloc_index = this.exports.__getAtomicMalloc__() / 4;\n\n\t\t\t\t\tAtomics.store(this.memory_views.I32, __atomic_malloc_index, UNLOCKED);\n\t\t\t\t\t// Atomics.notify(this.memory_views.I32, __atomic_malloc_index);\n\t\t\t\t\tAtomics.notify(this.memory_views.I32, __atomic_malloc_index, 1);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\tcustom_functions,\n\n\t\t\t\t{\n\t\t\t\t\t// TODO: port to C++ ?\n\t\t\t\t\tmalloc: (size) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst _size = Math.max(16, Math.pow(2, Math.ceil(Math.log(size) / Math.log(2))));\n\n\t\t\t\t\t\tconst position = Math.log2(_size);\n\n\t\t\t\t\t\tlet addr = 0;\n\n\t\t\t\t\t\tmalloc_lock();\n\t\t\t\t\t\t// this.__lock__(this.exports.__getAtomicMalloc__());\n\n\t\t\t\t\t\tif (this.__heap_segments[position])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taddr = this.__heap_segments[position];\n\n\t\t\t\t\t\t\tthis.__heap_segments[position] = 0;\n\n\t\t\t\t\t\t\t// this.Size(addr - 16)[0] = _size;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst __heap_pointer = this.Size(this.exports.__getHeapPointer__());\n\n\t\t\t\t\t\t\tthis.Size(__heap_pointer[0])[0] = _size;\n\n\t\t\t\t\t\t\t__heap_pointer[0] += 16;\n\n\t\t\t\t\t\t\taddr = __heap_pointer[0];\n\n\t\t\t\t\t\t\t__heap_pointer[0] += _size;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmalloc_unlock();\n\t\t\t\t\t\t// this.__unlock__(this.exports.__getAtomicMalloc__());\n\n\t\t\t\t\t\treturn addr;\n\t\t\t\t\t},\n\n\t\t\t\t\tfree: (addr) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tconst size = this.Size(addr - 16)[0];\n\n\t\t\t\t\t\tmalloc_lock();\n\t\t\t\t\t\t// this.__lock__(this.exports.__getAtomicMalloc__());\n\n\t\t\t\t\t\tconst __heap_pointer = this.Size(this.exports.__getHeapPointer__());\n\n\t\t\t\t\t\tif (__heap_pointer[0] === addr + size)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t__heap_pointer[0] = addr - 16;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.__heap_segments[Math.log2(size)] = addr;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmalloc_unlock();\n\t\t\t\t\t\t// this.__unlock__(this.exports.__getAtomicMalloc__());\n\t\t\t\t\t},\n\n\t\t\t\t\trealloc: () => IDLE_FUNCTION,\n\t\t\t\t\tcalloc: () => IDLE_FUNCTION,\n\n\t\t\t\t\t__libc_malloc: () => IDLE_FUNCTION,\n\t\t\t\t\t__libc_realloc: () => IDLE_FUNCTION,\n\t\t\t\t\t__libc_calloc: () => IDLE_FUNCTION,\n\t\t\t\t\t__libc_free: () => IDLE_FUNCTION,\n\n\t\t\t\t\tposix_memalign: () => IDLE_FUNCTION,\n\n\t\t\t\t\t// realloc: () => LOG(\"realloc\"),\n\t\t\t\t\t// calloc: () => LOG(\"calloc\"),\n\n\t\t\t\t\t// __libc_malloc: () => LOG(\"__libc_malloc\"),\n\t\t\t\t\t// __libc_realloc: () => LOG(\"__libc_realloc\"),\n\t\t\t\t\t// __libc_calloc: () => LOG(\"__libc_calloc\"),\n\t\t\t\t\t// __libc_free: () => LOG(\"__libc_free\"),\n\n\t\t\t\t\t// posix_memalign: () => LOG(\"posix_memalign\"),\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\n\t\tthis.custom_functions = custom_functions;\n\n\n\n\t\tclass DataBase\n\t\t{\n\t\t\tconstructor (size, type, type_size)\n\t\t\t{\n\t\t\t\tif (typeof size === 'object')\n\t\t\t\t{\n\t\t\t\t\tthis.size = size.length;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.size = size;\n\t\t\t\t}\n\n\t\t\t\tthis.addr = wasm_wrapper.exports.RDTY_WASM_WRAPPER_malloc(this.size * type_size);\n\n\t\t\t\tthis.data = wasm_wrapper[type](this.addr, this.size);\n\n\t\t\t\tif (typeof size === 'object')\n\t\t\t\t{\n\t\t\t\t\tthis.set(size);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tset (_data, offset = 0)\n\t\t\t{\n\t\t\t\t// LOG('_data', _data)\n\t\t\t\tthis.data.set(_data, offset);\n\t\t\t}\n\n\t\t\tfree ()\n\t\t\t{\n\t\t\t\twasm_wrapper.exports.RDTY_WASM_WRAPPER_free(this.addr);\n\t\t\t}\n\t\t}\n\n\t\tclass DataFloat extends DataBase\n\t\t{\n\t\t\tconstructor (size)\n\t\t\t{\n\t\t\t\tsuper(size, 'Float', wasm_wrapper.FLOAT_SIZE);\n\t\t\t}\n\t\t}\n\n\t\tthis.DataFloat = DataFloat;\n\n\t\tclass DataUint32 extends DataBase\n\t\t{\n\t\t\tconstructor (size)\n\t\t\t{\n\t\t\t\tsuper(size, 'Uint32', wasm_wrapper.UINT32_SIZE);\n\t\t\t}\n\t\t}\n\n\t\tthis.DataUint32 = DataUint32;\n\n\n\n\n\t\tclass ThreadPromiseBunch\n\t\t{\n\t\t\tconstructor ()\n\t\t\t{\n\t\t\t\tthis.running_count = 0;\n\t\t\t}\n\n\t\t\trun (callback1, callback2 = IDLE_FUNCTION)\n\t\t\t{\n\t\t\t\t++this.running_count;\n\n\t\t\t\tif (this.running_count > 1)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tLOG('ThreadPromiseBunch start __heap_pointer', wasm_wrapper.Size(wasm_wrapper.exports.__getHeapPointer__())[0])\n\n\t\t\t\tPromise.all(callback1())\n\t\t\t\t\t.then\n\t\t\t\t\t(() =>\n\t\t\t\t\t{\n\t\t\t\t\t\tLOG('ThreadPromiseBunch end __heap_pointer', wasm_wrapper.Size(wasm_wrapper.exports.__getHeapPointer__())[0])\n\n\t\t\t\t\t\twasm_wrapper.resetHeapPointer();\n\n\t\t\t\t\t\tcallback2();\n\n\t\t\t\t\t\tif (this.running_count > 1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.running_count = 0;\n\n\t\t\t\t\t\t\tthis.run(callback1, callback2);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.running_count = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.ThreadPromiseBunch = ThreadPromiseBunch;\n\t}\n\n\tChar (addr, length = 1)\n\t{\n\t\treturn this.memory_views.UI8.subarray(addr, addr + length);\n\t}\n\n\tUint8 (addr, length = 1)\n\t{\n\t\treturn this.memory_views.UI8.subarray(addr, addr + length);\n\t}\n\n\tInt (addr, length = 1)\n\t{\n\t\tconst _addr = addr / this.INT_SIZE;\n\n\t\treturn this.memory_views.I32.subarray(_addr, _addr + length);\n\t}\n\n\tUint32 (addr, length = 1)\n\t{\n\t\tconst _addr = addr / this.UINT32_SIZE;\n\n\t\treturn this.memory_views.UI32.subarray(_addr, _addr + length);\n\t}\n\n\tSize (addr, length = 1)\n\t{\n\t\tconst _addr = addr / this.SIZE_SIZE;\n\n\t\treturn this.memory_views.UI32.subarray(_addr, _addr + length);\n\t}\n\n\tFloat (addr, length = 1)\n\t{\n\t\tconst _addr = addr / this.FLOAT_SIZE;\n\n\t\treturn this.memory_views.F32.subarray(_addr, _addr + length);\n\t}\n\n\tDouble (addr, length = 1)\n\t{\n\t\t// Data must be aligned with 8 bytes.\n\t\tconst _addr = addr / this.DOUBLE_SIZE;\n\n\t\treturn this.memory_views.F64.subarray(_addr, _addr + length);\n\t}\n\n\tAddr (addr, length = 1)\n\t{\n\t\tconst _addr = addr / this.ADDR_SIZE;\n\n\t\treturn this.memory_views.UI32.subarray(_addr, _addr + length);\n\t}\n\n\tAddr2 (name, length = 1)\n\t{\n\t\treturn this.Addr(this.exports[name].value, length);\n\t}\n\n\tFunction (addr)\n\t{\n\t\treturn this.exports.__indirect_function_table.get(addr);\n\t}\n\n\tCStringLen (addr)\n\t{\n\t\tconst _addr = addr;\n\n\t\tfor (let vend = 0; ; ++vend)\n\t\t{\n\t\t\tif (this.Char(_addr + vend)[0] === 0)\n\t\t\t{\n\t\t\t\treturn vend;\n\t\t\t}\n\t\t}\n\t}\n\n\tCString (addr)\n\t{\n\t\treturn this.memory_views.UI8.subarray(addr, addr + this.CStringLen(addr));\n\t}\n\n\tCString2 (addr)\n\t{\n\t\treturn WasmWrapper.convertUint8ArrayToDomString(this.memory_views.UI8.subarray(addr, addr + this.CStringLen(addr)));\n\t}\n\n\tStdString (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Char\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdStringData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdStringSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVector (addr, type)\n\t{\n\t\tconst result =\n\t\t\tthis[type]\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVectorUint8 (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Uint8\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVectorSize (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Size\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVectorUint32 (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Uint32\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVectorFloat (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Float\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tStdVectorAddr (addr)\n\t{\n\t\tconst result =\n\t\t\tthis.Addr\n\t\t\t(\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorData(addr),\n\n\t\t\t\tthis.exports.RDTY_WASM_WRAPPER_getStdVectorSize(addr),\n\t\t\t);\n\n\t\treturn result;\n\t}\n\n\tClass (name)\n\t{\n\t\tconst wasm_wrapper = this;\n\n\n\n\t\tclass _Class\n\t\t{\n\t\t\tstatic name = name;\n\n\t\t\tstatic overloaded = {};\n\n\n\n\t\t\tconstructor (input)\n\t\t\t{\n\t\t\t\tif (typeof input === 'number')\n\t\t\t\t{\n\t\t\t\t\tthis.addr = input;\n\t\t\t\t}\n\t\t\t\telse if (typeof input === 'string')\n\t\t\t\t{\n\t\t\t\t\t[ this.addr ] = wasm_wrapper.Addr2(input);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tself.Object.keys(this.exports_demangled)\n\t\t\t.filter\n\t\t\t(\n\t\t\t\tmember_name => member_name.includes(name),\n\t\t\t)\n\t\t\t.forEach\n\t\t\t(\n\t\t\t\tmember_name =>\n\t\t\t\t{\n\t\t\t\t\tlet member_name_trimmed = member_name.replace(`${ name }::`, '').replace(/\\((.*)+/g, '');\n\n\t\t\t\t\t// Some objects may be exported twice from wasm. TODO: why does it occur?\n\t\t\t\t\tconst wasm_object =\n\t\t\t\t\t\twasm_wrapper.exports_demangled[member_name][0] || wasm_wrapper.exports_demangled[member_name];\n\n\t\t\t\t\tif (typeof wasm_object === 'function')\n\t\t\t\t\t{\n\t\t\t\t\t\tconst parameters =\n\t\t\t\t\t\t\tmember_name.match(/\\((.*)+/g)?.[0].replace(/\\(|( )|\\)/g, '').split(',');\n\n\t\t\t\t\t\tif (parameters.length && parameters[0] === '')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tparameters.length = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// static function\n\t\t\t\t\t\tif (parameters.length === wasm_object.length)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// non-static function\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (_Class.prototype[member_name_trimmed])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!_Class.overloaded[member_name_trimmed])\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t_Class.overloaded[member_name_trimmed] = 0;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t++_Class.overloaded[member_name_trimmed];\n\n\t\t\t\t\t\t\t\tmember_name_trimmed += `_o${ _Class.overloaded[member_name_trimmed] }`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Non-wrapped\n\t\t\t\t\t\t\t_Class[`proto_${ member_name_trimmed }`] = wasm_object;\n\n\t\t\t\t\t\t\t_Class.prototype[member_name_trimmed] =\n\t\t\t\t\t\t\t\tfunction (...args)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn wasm_object(this.addr, ...args);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (typeof wasm_object === 'object')\n\t\t\t\t\t{\n\t\t\t\t\t\t_Class[member_name_trimmed] = wasm_object;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\n\t\t// Presume New() returns a pointer\n\t\tif (_Class.New)\n\t\t{\n\t\t\t_Class.NewWrapper = () => new _Class(_Class.New());\n\t\t}\n\n\n\n\t\treturn _Class;\n\t}\n\n\t// TODO: Mutex.\n\n\tresizeStdVector (addr, size)\n\t{\n\t\tthis.exports.RDTY_WASM_WRAPPER_StdVector_resize(addr, size);\n\t}\n\n\tupdateStdVectorData (addr, type, _data)\n\t{\n\t\t// this.exports.RDTY_WASM_WRAPPER_StdVector_resize(addr, _data.length);\n\n\t\tthis.StdVector(addr, type).set(_data);\n\t}\n\n\t// demangle (name, name_addr)\n\t// {\n\t// \tthis.memory_views.UI8.set(WasmWrapper.convertDomStringToUint8Array(name), name_addr);\n\n\t// \tconst demangled_name =\n\t// \t\tWasmWrapper.convertUint8ArrayToDomString\n\t// \t\t(this.CString(this.exports.RDTY_WASM_WRAPPER_demangleCxxName(name_addr)))\n\t// \t\t\t.replace(/, /g, ',');\n\n\t// \treturn demangled_name;\n\t// }\n\n\tinitHeapPointer ()\n\t{\n\t\t[ this.__heap_pointer_init ] = this.Size(this.exports.__getHeapPointer__());\n\n\t\tthis.__heap_segments.fill(0);\n\t}\n\n\tresetHeapPointer ()\n\t{\n\t\tthis.Size(this.exports.__getHeapPointer__())[0] = this.__heap_pointer_init;\n\n\t\tthis.__heap_segments.fill(0);\n\t}\n\n\tdemangleCxxNames (debug)\n\t{\n\t\tconst demangled_name_max_length = 1024;\n\t\tconst demangled_name_addr = this.exports.RDTY_WASM_WRAPPER_malloc(demangled_name_max_length);\n\n\t\tthis.exports_demangled_reduced = {};\n\n\t\tthis.exports_demangled =\n\t\t\tObject.keys(this.exports)\n\t\t\t\t.reduce\n\t\t\t\t(\n\t\t\t\t\t(exports_demangled, _name) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (_name.startsWith('_Z'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst name = `${ _name }\\0`;\n\n\t\t\t\t\t\t\t// const demangled_name = this.demangle(name, demangled_name_addr);\n\n\t\t\t\t\t\t\tthis.memory_views.UI8.set(WasmWrapper.convertDomStringToUint8Array(name), demangled_name_addr);\n\n\t\t\t\t\t\t\tconst demangled_name =\n\t\t\t\t\t\t\t\tWasmWrapper.convertUint8ArrayToDomString\n\t\t\t\t\t\t\t\t(this.CString(this.exports.RDTY_WASM_WRAPPER_demangleCxxName(demangled_name_addr)))\n\t\t\t\t\t\t\t\t\t.replace(/, /g, ',');\n\n\t\t\t\t\t\t\tif (exports_demangled[demangled_name])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (Array.isArray(exports_demangled[demangled_name]))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\texports_demangled[demangled_name].push(this.exports[_name]);\n\n\t\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst first_entry = exports_demangled[demangled_name];\n\n\t\t\t\t\t\t\t\texports_demangled[demangled_name] = [ first_entry, this.exports[_name] ];\n\n\t\t\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\texports_demangled[demangled_name] = this.exports[_name];\n\n\t\t\t\t\t\t\tthis.exports_demangled_reduced[demangled_name.replace(/\\([^)]*\\)/g, '')] = this.exports[_name];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn exports_demangled;\n\t\t\t\t\t},\n\n\t\t\t\t\t{},\n\t\t\t\t);\n\n\t\tthis.exports.RDTY_WASM_WRAPPER_free(demangled_name_addr);\n\n\t\tif (debug)\n\t\t{\n\t\t\tDEBUG_LOG(this.exports_demangled);\n\t\t\tDEBUG_LOG(this.exports_demangled_reduced);\n\t\t}\n\t}\n\n\tdoCommons (buffer, debug)\n\t{\n\t\tthis.memory_views.UI8 = new Uint8Array(buffer);\n\t\tthis.memory_views.I8 = new Int8Array(buffer);\n\t\tthis.memory_views.UI16 = new Uint16Array(buffer);\n\t\tthis.memory_views.I16 = new Int16Array(buffer);\n\t\tthis.memory_views.UI32 = new Uint32Array(buffer);\n\t\tthis.memory_views.I32 = new Int32Array(buffer);\n\t\tthis.memory_views.F32 = new Float32Array(buffer);\n\t\tthis.memory_views.F64 = new Float64Array(buffer);\n\n\t\tif (this.exports.RDTY_WASM_WRAPPER_sizeof)\n\t\t{\n\t\t\tthis.ADDR_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(0);\n\t\t\tthis.SIZE_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(1);\n\t\t\tthis.UINT32_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(2);\n\t\t\tthis.FLOAT_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(3);\n\t\t\tthis.DOUBLE_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(4);\n\t\t\tthis.INT_SIZE = this.exports.RDTY_WASM_WRAPPER_sizeof(5);\n\n\t\t\tthis.SIMD = this.Size(this.exports.__getSimd__())[0];\n\t\t}\n\t}\n\n\tasync async (_function, ...args)\n\t{\n\t\tthis.async_args = args;\n\n\t\t(this.async_func = _function)(...args);\n\n\t\tthis.exports.asyncify_stop_unwind();\n\n\t\tawait this.async_promise;\n\n\t\tthis.async_count = 0;\n\t}\n\n\tasync init\n\t({\n\t\t// TODO: reorder.\n\t\tcode,\n\t\tmemory = null,\n\t\timports = { env: {} },\n\t\tstack_pointer = undefined,\n\t\tdoCommons = true,\n\t\tforceLocalMemory = false,\n\t\tmemory_params = { minimum: 65536, maximum: 65536, initial: 65536 },\n\t\tdemangleCxxNames = false,\n\t\tdebug = false,\n\t\t// malloc = true,\n\t})\n\t{\n\t\t// const wasm_wrapper = this;\n\n\t\tlet code_type = null;\n\n\t\t// Code for passing to other WASM instances (e.g. threads).\n\t\tthis.code = code;\n\n\t\tif (typeof code === 'string')\n\t\t{\n\t\t\tif (code.slice(0, 8) === 'function')\n\t\t\t{\n\t\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\t\tcode = new Function(code);\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string function -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t\t// base64\n\t\t\telse\n\t\t\t{\n\t\t\t\tcode = Uint8Array.from(atob(code), c => c.charCodeAt(0));\n\n\t\t\t\t// TODO: Make code shared (if can) to speed up passing it to workers. DONE?\n\t\t\t\tif (self.SharedArrayBuffer)\n\t\t\t\t{\n\t\t\t\t\tconst code_temp = code;\n\n\t\t\t\t\tcode = new Uint8Array(new SharedArrayBuffer(code.length));\n\n\t\t\t\t\tcode.set(code_temp);\n\t\t\t\t}\n\n\t\t\t\tthis.code = code;\n\n\t\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\t\tDEBUG_INFO_PUSH(`WASM CODE: string base64 -> ${ code.constructor.name }`);\n\t\t\t}\n\t\t}\n\t\telse if (typeof code === 'function')\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_FUNCTION__;\n\n\t\t\tthis.code = code.toString();\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: function`);\n\t\t}\n\t\t// Code is an Uint8Array backed (SharedArrayBuffer optionally) or ArrayBuffer or SharedArrayBuffer.\n\t\t// UPD. SharedArrayBuffer can not be used as source for WebAssembly module, only for Uint8Array\n\t\t// backed by SharedArrayBuffer.\n\t\telse\n\t\t{\n\t\t\tcode_type = __CODE_TYPE_BYTECODE__;\n\n\t\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code.constructor.name }`);\n\t\t}\n\n\t\tDEBUG_INFO_PUSH(`WASM CODE: ${ code_type === __CODE_TYPE_BYTECODE__ ? 'BYTECODE' : 'FUNCTION' }`);\n\n\t\t// DEBUG_LABEL_LOG();\n\n\n\n\t\tif (code_type === __CODE_TYPE_BYTECODE__)\n\t\t{\n\t\t\tconst wasm_module = await WebAssembly.compile(code);\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_LOG(wasm_module);\n\t\t\t}\n\n\t\t\tconst wasm_module_imports = WebAssembly.Module.imports(wasm_module);\n\t\t\t// const wasm_module_exports = WebAssembly.Module.exports(wasm_module);\n\n\t\t\tthis.memory = null;\n\n\t\t\t// Memory comes from WASM main worker instance to thread instance.\n\t\t\t// is always imported and shared.\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory;\n\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: SHARED')\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst [ imported_memory ] =\n\t\t\t\t\twasm_module_imports\n\t\t\t\t\t\t.filter((import_desc) => (import_desc.kind === 'memory'));\n\n\t\t\t\tconst shared = Boolean(self.SharedArrayBuffer) && !forceLocalMemory;\n\n\t\t\t\tif (imported_memory)\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: IMPORTED')\n\n\t\t\t\t\t// chrome://flags#enable-experimental-webassembly-features must be enabled\n\t\t\t\t\t// to access \"type\" property of \"imported_memory\". It contains memory\n\t\t\t\t\t// type and size info produced by the linker.\n\t\t\t\t\t// \"--import-memory\" linker flag specifies whether memory is imported to WebAssembly module.\n\t\t\t\t\t// \"--shared-memory\" linker flag specifies whether memory is shared between WebAssembly instances.\n\t\t\t\t\t// \"--max-memory=N\" linker flag specifies maximum size of memory for WebAssembly instance.\n\t\t\t\t\tif (imported_memory.type)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst memory_desc =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinitial: imported_memory.type.maximum || imported_memory.type.minimum,\n\t\t\t\t\t\t\tmaximum: imported_memory.type.maximum || imported_memory.type.minimum,\n\t\t\t\t\t\t\tshared: imported_memory.type.shared && shared,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.memory = new WebAssembly.Memory(memory_desc);\n\n\t\t\t\t\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ memory_desc.shared ? 'SHARED' : 'NOT SHARED' }`)\n\t\t\t\t\t}\n\t\t\t\t\t// Parameters must match values produced by the linker.\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.memory =\n\t\t\t\t\t\t\tnew WebAssembly.Memory\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\t// 65536 pages == 4gb, maximum possible memory size for 32-bit WebAssembly instance.\n\t\t\t\t\t\t\t\tinitial: memory_params.initial,\n\t\t\t\t\t\t\t\tmaximum: memory_params.maximum, // Must match \"--max-memory=N\" flag.\n\t\t\t\t\t\t\t\tshared, // Must match \"--shared-memory\" flag.\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\tDEBUG_INFO_PUSH(`WASM MEMORY: ${ shared ? 'SHARED' : 'NOT SHARED' }`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tDEBUG_INFO_PUSH('WASM MEMORY: EXPORTED')\n\n\t\t\t\t\t// // In this case arbitrary parameters may be used.\n\t\t\t\t\t// this.memory =\n\t\t\t\t\t// \tnew WebAssembly.Memory\n\t\t\t\t\t// \t({\n\t\t\t\t\t// \t\t// 65536 pages == 4gb, maximum possible memory size for 32-bit WebAssembly instance.\n\t\t\t\t\t// \t\tinitial: memory_params.initial,\n\t\t\t\t\t// \t\tmaximum: memory_params.maximum,\n\t\t\t\t\t// \t\tshared,\n\t\t\t\t\t// \t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Object for passing to threads.\n\t\t\tthis.imports = { env: {} };\n\n\t\t\tconst import_modules = {};\n\n\t\t\tObject.keys(imports)\n\t\t\t\t.forEach\n\t\t\t\t(\n\t\t\t\t\tmodule =>\n\t\t\t\t\t{\n\t\t\t\t\t\tObject.keys(imports[module])\n\t\t\t\t\t\t\t.forEach\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t_import =>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (!this.imports[module])\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.imports[module] = {};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tthis.imports[module][_import] = 0;\n\n\t\t\t\t\t\t\t\t\timports[module][key] = imports[module][key] || IDLE_FUNCTION;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\tObject.assign(import_modules, imports);\n\n\t\t\tObject.assign\n\t\t\t(\n\t\t\t\timport_modules.env,\n\n\t\t\t\tthis.custom_functions\n\t\t\t);\n\n\t\t\t// Imported memory\n\t\t\tif (this.memory)\n\t\t\t{\n\t\t\t\timport_modules.env.memory = this.memory;\n\t\t\t}\n\n\t\t\twasm_module_imports\n\t\t\t\t.forEach\n\t\t\t\t(\n\t\t\t\t\t_import =>\n\t\t\t\t\t{\n\t\t\t\t\t\tif (!import_modules[_import.module])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timport_modules[_import.module] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!import_modules[_import.module][_import.name])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (debug)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tDEBUG_LOG(`Missed ${ _import.module } import:`, _import.name);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// import_modules[_import.module][_import.name] = IDLE_FUNCTION;\n\t\t\t\t\t\t\timport_modules[_import.module][_import.name] = () => MISSED_IMPORT_FUNCTION_LOG(`Missed import function called: module \"${ _import.module }\", function \"${ _import.name }\"`);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\tconst wasm_module_instance =\n\t\t\t\tawait WebAssembly.instantiate\n\t\t\t\t// await WebAssembly.instantiateStreaming\n\t\t\t\t(\n\t\t\t\t\twasm_module,\n\n\t\t\t\t\timport_modules,\n\t\t\t\t);\n\n\t\t\t// Exported memory\n\t\t\tif (!this.memory)\n\t\t\t{\n\t\t\t\tthis.memory = wasm_module_instance.exports.memory;\n\t\t\t}\n\n\t\t\tif (debug)\n\t\t\t{\n\t\t\t\tDEBUG_LOG(wasm_module_instance);\n\t\t\t}\n\n\t\t\t// imported || exported\n\t\t\t// const { buffer } = this.memory || wasm_module_instance.exports.memory;\n\n\t\t\t// this.instance = wasm_module_instance;\n\n\t\t\tthis.exports = wasm_module_instance.exports;\n\t\t}\n\t\t/**\n\t\t * Initializes WasmWrapper instance with JS code compiled from WASM with wasm2js.\n\t\t *\n\t\t * wasm2js generates code with Atomics, even if its input WASM is compiled without flag \"--shared-memory\".\n\t\t * TODO: use --disable-threads to generating Atomics as --help says.\n\t\t * UPD: There are still Atomics even with --disable-threads flag.\n\t\t *\n\t\t * if (!self.Atomics)\n\t\t * {\n\t\t *   self.Atomics = { load: (arr, index) => arr[index] };\n\t\t * }\n\t\t */\n\t\telse\n\t\t{\n\t\t\t/**\n\t\t\t * Binary search for a max value without knowing the exact value, only that it\n\t\t\t * can be under or over It dose not test every number but instead looks for\n\t\t\t * 1,2,4,8,16,32,64,128,96,95 to figure out that you thought about #96 from\n\t\t\t * 0-infinity\n\t\t\t *\n\t\t\t * @example findFirstPositive(x => matchMedia(`(max-resolution: ${x}dpi)`).matches)\n\t\t\t * @author Jimmy Wärting\n\t\t\t * @see {@link https://stackoverflow.com/a/72124984/1008999}\n\t\t\t * @param {function} f       The function to run the test on (should return truthy or falsy values)\n\t\t\t * @param {bigint} [b=1]  Where to start looking from\n\t\t\t * @param {function} d privately used to calculate the next value to test\n\t\t\t * @returns {bigint} Intenger\n\t\t\t */\n\t\t\t// function findFirstPositive (f,b=1n,d=(e,g,c)=>g<e?-1:0<f(c=e+g>>1n)?c==e||0>=f(c-1n)?c:d(e,c-1n):d(c+1n,g)) {\n\t\t\t// \tfor (;0>=f(b);b<<=1n);return d(b>>1n,b)-1n\n\t\t\t// }\n\n\t\t\t// const tries = []\n\t\t\t// const maxSize = findFirstPositive(x => {\n\t\t\t// \ttries.push(Number(x).toLocaleString())\n\t\t\t// \ttry { new ArrayBuffer(Number(x)); return false } catch { return true }\n\t\t\t// })\n\t\t\t// console.log('found it in', tries.length, 'attempts')\n\t\t\t// console.log(Number(maxSize))\n\t\t\t// console.log(tries)\n\n\t\t\t// TODO: find maximum possible size of ArrayBuffer.\n\t\t\t// this.memory = memory || { buffer: new (self.SharedArrayBuffer || ArrayBuffer)(2145386496) };\n\n\t\t\tthis.memory = null;\n\n\t\t\tif (memory)\n\t\t\t{\n\t\t\t\tthis.memory = memory\n\t\t\t}\n\t\t\telse if (forceLocalMemory || !self.SharedArrayBuffer)\n\t\t\t{\n\t\t\t\tthis.memory = { buffer: new self.ArrayBuffer(2145386496) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.memory = { buffer: new self.SharedArrayBuffer(2145386496) };\n\t\t\t}\n\n\t\t\tconst imports_env =\n\t\t\t\tObject.assign\n\t\t\t\t(\n\t\t\t\t\timports.env,\n\n\t\t\t\t\t{ memory: this.memory },\n\n\t\t\t\t\tthis.custom_functions\n\t\t\t\t);\n\n\t\t\tthis.exports = code(imports_env);\n\t\t}\n\n\n\n\t\tif (stack_pointer !== undefined)\n\t\t{\n\t\t\tthis.exports.setStackPointer(stack_pointer);\n\t\t}\n\n\t\tif (doCommons)\n\t\t{\n\t\t\tconst { buffer } = this.memory;\n\n\t\t\tthis.doCommons(buffer);\n\t\t}\n\n\t\tthis.__heap_segments = this.Size(this.exports.__getHeapSegments__(), 28);\n\n\t\tif (this.exports._main)\n\t\t{\n\t\t\tthis.exports._main();\n\t\t}\n\n\t\tif (code_type === __CODE_TYPE_BYTECODE__)\n\t\t{\n\t\t\tthis.__lock__(this.exports.__getAtomicThreadId__());\n\n\t\t\tDEBUG_INFO_PUSH(`WASM THREAD: ${ this.Size(this.exports.__getThreadId__())[0]++ }`);\n\t\t\tDEBUG_LABEL_LOG();\n\n\t\t\tthis.__unlock__(this.exports.__getAtomicThreadId__());\n\t\t}\n\n\t\tif (demangleCxxNames)\n\t\t{\n\t\t\tthis.demangleCxxNames(debug);\n\t\t}\n\n\t\t// This is to be able to call .then()\n\t\treturn (await new Promise(resolve => resolve(this)));\n\t}\n\n\t// Thread ()\n\t// {\n\t// \treturn new WasmWrapper.Thread(this);\n\t// }\n\n\t// Thread2 ()\n\t// {\n\t// \treturn new WasmWrapper.Thread2(this);\n\t// }\n\n\t// Thread3 ()\n\t// {\n\t// \treturn new WasmWrapper.Thread3(this);\n\t// }\n\n\tasync initThreads (thread_count)\n\t{\n\t\tconst threads =\n\t\t\tnew Array(thread_count)\n\t\t\t\t.fill(null)\n\t\t\t\t.map(() => new WasmWrapper.Thread3(this));\n\n\t\tawait Promise.all(threads.map(thread => thread.init()));\n\n\t\treturn threads;\n\t}\n}\n\n\n\nif (!self.window && self.SharedArrayBuffer && self.Atomics)\n{\n\tconst LOCKED = 0;\n\tconst UNLOCKED = 1;\n\n\tWasmWrapper.prototype.__lock__ =\n\t\tfunction (addr)\n\t\t{\n\t\t\tconst _index = addr / 4;\n\n\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tconst old_state =\n\t\t\t\t\tAtomics.compareExchange\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.memory_views.I32,\n\t\t\t\t\t\t_index,\n\t\t\t\t\t\tUNLOCKED, // old state\n\t\t\t\t\t\tLOCKED, // new state\n\t\t\t\t\t);\n\n\t\t\t\tif (old_state === UNLOCKED)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tAtomics.wait(this.memory_views.I32, _index, LOCKED);\n\t\t\t}\n\t\t};\n\n\tWasmWrapper.prototype.__unlock__ =\n\t\tfunction (addr)\n\t\t{\n\t\t\tconst _index = addr / 4;\n\n\t\t\tAtomics.store(this.memory_views.I32, _index, UNLOCKED);\n\t\t\tAtomics.notify(this.memory_views.I32, _index, 1);\n\t\t};\n}\nelse\n{\n\tWasmWrapper.prototype.__lock__ =\n\tWasmWrapper.prototype.__unlock__ =\n\t\tIDLE_FUNCTION;\n}\n\n\n\nexport default WasmWrapper;\n","const _call =\n\t(wasm, message_data) =>\n\t{\n\t\tif (message_data.js_loop)\n\t\t{\n\t\t\tsetInterval(wasm.exports[message_data.function_name], 0, ...message_data.data);\n\t\t}\n\t\telse\n\t\t{\n\t\t\twasm.exports[message_data.function_name](...message_data.data);\n\t\t}\n\t};\n\nexport default (wasm, message_data) =>\n{\n\tif (message_data.try_wrap)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_call(wasm, message_data);\n\t\t}\n\t\tcatch (evt)\n\t\t{\n\t\t\tconsole.log(evt);\n\t\t}\n\t}\n\telse\n\t{\n\t\t_call(wasm, message_data);\n\t}\n};\n","import '@babel/runtime/regenerator';\n\nimport WasmWrapper from '../../wasm-wrapper';\nimport call from '../common/call';\n\n\n\nconst wasm = new WasmWrapper();\n\n\n\nonmessage =\n\tasync ({ data }) =>\n\t{\n\t\tawait wasm.init(data);\n\n\t\tcall(wasm, data);\n\n\t\tpostMessage(true);\n\t};\n","import Worker from './thread.1.worker.js';\n\n\n\nconst empty_array = [];\n\n\n\nexport default class Thread\n{\n\tconstructor\n\t({\n\t\twasm_wrapper,\n\n\t\tfunction_name,\n\n\t\tdata = empty_array,\n\n\t\tjs_loop = false,\n\n\t\tfreeWorkedMemory = false,\n\n\t\ttry_wrap = false,\n\t})\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.RDTY_WASM_WRAPPER_malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\t// Should be private?\n\t\tthis.promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker = new Worker();\n\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports } = wasm_wrapper;\n\n\t\t\t\t\t// for (const key in memory)\n\t\t\t\t\t// {\n\t\t\t\t\t// \tif (key !== 'buffer')\n\t\t\t\t\t// \t{\n\t\t\t\t\t// \t\tdelete memory[key];\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\n\t\t\t\t\t\tfunction_name,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\ttry_wrap,\n\t\t\t\t\t\tjs_loop,\n\t\t\t\t\t\tfreeWorkedMemory,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\tterminate ()\n\t{\n\t\tthis.worker.terminate();\n\n\t\tthis.wasm_wrapper.exports.RDTY_WASM_WRAPPER_free(this.stack_addr);\n\n\t\t// this.promise = null;\n\t}\n\n\tasync join ()\n\t{\n\t\tawait this.promise;\n\n\t\tthis.terminate();\n\t}\n}\n","import '@babel/runtime/regenerator';\n\nimport WasmWrapper from '../../wasm-wrapper';\n\n\n\nconst wasm = new WasmWrapper();\n\n\n\nonmessage =\n\tasync ({ data }) =>\n\t{\n\t\tconst [ function_addr, thread_types_addr, thread_values_addr ] = data.data;\n\n\t\tawait wasm.init(data);\n\n\t\tconst _function = wasm.Function(function_addr);\n\n\t\tconst arg_types = wasm.Size(thread_types_addr, _function.length);\n\n\t\tconst args = new Array(_function.length);\n\n\t\tconst any_type_size = wasm.Size(wasm.exports.RDTY_WASM_WRAPPER_ANYVALUE_SIZE)[0];\n\n\t\tfor (let i = 0; i < _function.length; ++i)\n\t\t{\n\t\t\targs[i] = wasm.interp[arg_types[i]](thread_values_addr + (any_type_size * i))[0];\n\t\t}\n\n\t\t_function(...args);\n\n\t\tpostMessage(true);\n\t};\n","import Worker from './thread2.1.worker.js';\n\n\n\nexport default class Thread2\n{\n\tconstructor (wasm_wrapper, data)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.RDTY_WASM_WRAPPER_malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\tthis.active = true;\n\n\t\tthis.promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker = new Worker();\n\n\t\t\t\t\t// TODO: free stack memory when thread terminates automatically.\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports } = wasm_wrapper;\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\t\t\t\t\t\tdata,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\t}\n\n\tterminate ()\n\t{\n\t\tif (this.active)\n\t\t{\n\t\t\tthis.worker.terminate();\n\n\t\t\tthis.wasm_wrapper.exports.RDTY_WASM_WRAPPER_free(this.stack_addr);\n\n\t\t\tthis.active = false;\n\t\t}\n\t}\n}\n","import '@babel/runtime/regenerator';\n\nimport WasmWrapper from '../../wasm-wrapper';\nimport call from '../common/call';\n\n\n\nconst wasm = new WasmWrapper();\n\n\n\nonmessage =\n\tasync ({ data }) =>\n\t{\n\t\tif (data.work)\n\t\t{\n\t\t\tcall(wasm, data);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tawait wasm.init(data);\n\t\t}\n\n\t\tpostMessage(true);\n\t};\n","import Worker from './thread3.1.worker.js';\n\n\n\nexport default class Thread\n{\n\tconstructor (wasm_wrapper)\n\t{\n\t\tthis.wasm_wrapper = wasm_wrapper;\n\n\t\tthis.stack_addr = this.wasm_wrapper.exports.RDTY_WASM_WRAPPER_malloc(this.wasm_wrapper.options.thread_stack_size);\n\n\t\tthis.stack_pointer = this.stack_addr + this.wasm_wrapper.options.thread_stack_size;\n\n\t\tthis.worker = new Worker();\n\t}\n\n\tinit ()\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tconst { code, memory, imports } = this.wasm_wrapper;\n\n\t\t\t\t\tconst { stack_pointer } = this;\n\n\t\t\t\t\tthis.worker.postMessage\n\t\t\t\t\t({\n\t\t\t\t\t\tcode,\n\t\t\t\t\t\tmemory,\n\t\t\t\t\t\timports,\n\t\t\t\t\t\tstack_pointer,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\t// options:\n\t// try_wrap,\n\t// js_loop,\n\t// freeWorkedMemory,\n\twork (function_name, data = [], options = {})\n\t{\n\t\tconst promise =\n\t\t\tnew Promise\n\t\t\t(\n\t\t\t\tresolve =>\n\t\t\t\t{\n\t\t\t\t\tthis.worker.onmessage = resolve;\n\n\t\t\t\t\tthis.worker.postMessage({ work: true, function_name, data, ...options });\n\t\t\t\t},\n\t\t\t);\n\n\t\treturn promise;\n\t}\n\n\tterminate ()\n\t{\n\t\tthis.worker.terminate();\n\n\t\tthis.wasm_wrapper.exports.RDTY_WASM_WRAPPER_free(this.stack_addr);\n\n\t\t// this.promise = null;\n\t}\n}\n","import WasmWrapper from './wasm-wrapper';\nimport _Thread from './threads/thread';\nimport _Thread2 from './threads/thread2';\nimport _Thread3 from './threads/thread3';\n\n\n\nObject.assign\n(\n\tWasmWrapper,\n\n\t{\n\t\tThread: _Thread,\n\t\tThread2: _Thread2,\n\t\tThread3: _Thread3,\n\t},\n);\n\n\nexport const Thread = _Thread;\nexport const Thread2 = _Thread2;\nexport const Thread3 = _Thread3;\n\nexport default WasmWrapper;\n"],"sourceRoot":""}