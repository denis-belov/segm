{"version":3,"sources":["webpack:////Users/Denis/reps/renderity/wasm-wrapper/src/test-simd/build/clang-wasm32/output/wasm/test-simd.wasm","webpack:///./node_modules/arraybuffer-loader/lib/to-array-buffer.js"],"names":["module","exports","base64Data","isBrowser","window","atob","binary","Buffer","from","toString","bytes","Uint8Array","length","i","charCodeAt","buffer"],"mappings":";;;;;;;;;AAAA,iBAAiB,mBAAO,CAAC,0KAA0G,qlB;;;;;;;;;;;;ACAnI,8CAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,UAAUC,UAAU,EAAE;EACrC,IAAIC,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,IAAI,KAAK,UAAU;EAClF,IAAIC,MAAM,GAAGH,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACH,UAAU,CAAC,GAAGK,MAAM,CAACC,IAAI,CAACN,UAAU,EAAE,QAAQ,CAAC,CAACO,QAAQ,CAAC,QAAQ,CAAC;EACvG,IAAIC,KAAK,GAAG,IAAIC,UAAU,CAACL,MAAM,CAACM,MAAM,CAAC;EAEzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACM,MAAM,EAAE,EAAEC,CAAC,EAAE;IACtCH,KAAK,CAACG,CAAC,CAAC,GAAGP,MAAM,CAACQ,UAAU,CAACD,CAAC,CAAC;EACjC;EAEA,OAAOH,KAAK,CAACK,MAAM;AACrB,CAAC,C","file":"2.js","sourcesContent":["module.exports = require(\"../../../../../../../../post-processing/3d-render/node_modules/arraybuffer-loader/lib/to-array-buffer.js\")(\"AGFzbQEAAAABCgJgAn9/AXtgAAADBQQAAQEABAUBcAEBAQUEAQECAgYIAX8BQYCIBAsHFQIGbWVtb3J5AgAIdGVzdFNpbWQAAwowBBEAIAH9AAAAIAD9AAAA/eQBCwIACw4AEIGAgIAAEIGAgIAACwoAIAAgARAAEAILAJQBBG5hbWUBeQQAJHRlc3RTaW1kKGZsb2F0IGNvbnN0KiwgZmxvYXQgY29uc3QqKQEFZHVtbXkCEV9fd2FzbV9jYWxsX2R0b3JzAzZ0ZXN0U2ltZChmbG9hdCBjb25zdCosIGZsb2F0IGNvbnN0KikgKC5jb21tYW5kX2V4cG9ydCkHEgEAD19fc3RhY2tfcG9pbnRlcgB2CXByb2R1Y2VycwEMcHJvY2Vzc2VkLWJ5AQVjbGFuZ1YxNC4wLjMgKGh0dHBzOi8vZ2l0aHViLmNvbS9sbHZtL2xsdm0tcHJvamVjdCAxZjkxNDAwNjRkZmJmYjBiYmRhOGU1MTMwNmVhNTEwODBiMmY3YWFjKQAwD3RhcmdldF9mZWF0dXJlcwMrB2F0b21pY3MrC2J1bGstbWVtb3J5KwdzaW1kMTI4\")","'use strict'\n\nmodule.exports = function (base64Data) {\n  var isBrowser = typeof window !== 'undefined' && typeof window.atob === 'function'\n  var binary = isBrowser ? window.atob(base64Data) : Buffer.from(base64Data, 'base64').toString('binary')\n  var bytes = new Uint8Array(binary.length)\n\n  for (var i = 0; i < binary.length; ++i) {\n    bytes[i] = binary.charCodeAt(i)\n  }\n\n  return bytes.buffer\n}\n"],"sourceRoot":""}